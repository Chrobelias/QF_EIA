(set-info :status unsat) ; swine result
(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it384 () Int)
(declare-fun it385 () Int)
(declare-fun it15 () Int)
(declare-fun it386 () Int)
(declare-fun it14 () Int)
(declare-fun it13 () Int)
(declare-fun it387 () Int)
(declare-fun bt433 () Bool)
(declare-fun bt434 () Bool)
(declare-fun bt435 () Bool)
(declare-fun bt436 () Bool)
(declare-fun it17 () Int)
(declare-fun it16 () Int)
(declare-fun it18 () Int)
(declare-fun bt25 () Bool)
(declare-fun bt28 () Bool)
(declare-fun bt26 () Bool)
(declare-fun bt27 () Bool)
(declare-fun it391 () Int)
(declare-fun it392 () Int)
(declare-fun it393 () Int)
(declare-fun it394 () Int)
(declare-fun bt437 () Bool)
(declare-fun bt438 () Bool)
(declare-fun bt439 () Bool)
(declare-fun bt440 () Bool)
(declare-fun it397 () Int)
(declare-fun it395 () Int)
(declare-fun bt442 () Bool)
(declare-fun bt444 () Bool)
(declare-fun bt441 () Bool)
(declare-fun it396 () Int)
(declare-fun bt443 () Bool)
(declare-fun it398 () Int)
(declare-fun it399 () Int)
(declare-fun it400 () Int)
(declare-fun it401 () Int)
(declare-fun bt445 () Bool)
(declare-fun bt446 () Bool)
(declare-fun bt447 () Bool)
(declare-fun bt448 () Bool)
(declare-fun it155 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it384 (- 2)) 0))
(assert (= (+ (* it15 (- 1)) it385) 0))
(assert (= (+ (* it14 (- 1)) it386) 0))
(assert (= (+ it387 (* it13 (- 1))) 0))
(assert (or (not bt433) (and false bt433)))
(assert (or bt434 (and false (not bt434))))
(assert (or (not bt435) (and false bt435)))
(assert (or (not bt436) (and false bt436)))
(assert (and bt27
     (not bt26)
     (not bt28)
     (not bt25)
     (= (+ it18 (- 1)) 0)
     (= (+ it384 (- 2)) 0)
     bt434
     (not bt436)
     (not bt435)
     (not bt433)
     (= (+ it387 (* it16 (- 1))) 0)
     (= (+ (* it17 (- 1)) it386) 0)))
(assert (= (+ it391 (- 2)) 0))
(assert (= (+ (* it18 (- 1)) it392) 0))
(assert (= (+ (* it17 (- 1)) it393) 0))
(assert (= (+ it394 (* it16 (- 1))) 0))
(assert (or (and bt27 bt437) (and (not bt27) (not bt437))))
(assert (or (and (not bt28) (not bt438)) (and bt28 bt438)))
(assert (or (and bt26 bt439) (and (not bt26) (not bt439))))
(assert (or (and (not bt25) (not bt440)) (and bt25 bt440)))
(assert (and (not bt439)
     (> (+ it394 (* it392 (- 1))) 0)
     (not bt443)
     (= (+ (* it396 (- 1)) it393) 0)
     bt437
     bt441
     (not bt444)
     bt442
     (= (+ it391 (- 2)) 0)
     (= (+ (* it395 (- 1)) it392) 0)
     (not bt438)
     (= (+ (* it397 (- 1)) it394) 0)
     (not bt440)))
(assert (= (+ it398 (- 2)) 0))
(assert (= (+ (* it395 (- 1)) it399) 0))
(assert (= (+ it400 (* it396 (- 1))) 0))
(assert (= (+ (* it397 (- 1)) it401) 0))
(assert (or (and bt442 bt445) (and (not bt442) (not bt445))))
(assert (or (and (not bt441) (not bt446)) (and bt441 bt446)))
(assert (or (and (not bt443) (not bt447)) (and bt443 bt447)))
(assert (or (and (not bt448) (not bt444)) (and bt444 bt448)))
(assert (let ((a!1 (+ (* (exp 2 (+ it155 (- 1))) (+ 0 it399) (+ 0 (- 1)))
              (+ 0 it401))))
  (and (>= (+ (* it398 (- 1)) 2) 0)
       (> (+ it401 (* it399 (- 1))) 0)
       (>= (+ it398 (- 2)) 0)
       (> a!1 (+ 0 0))
       (> it400 0)
       (not bt447)
       (not bt446)
       (>= (+ it155 (- 1)) 0)
       bt445
       (not bt448))))
(check-sat)
