(set-info :status unsat) ; swine result
(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it1100 () Int)
(declare-fun it15 () Int)
(declare-fun it1101 () Int)
(declare-fun it14 () Int)
(declare-fun it1102 () Int)
(declare-fun it1103 () Int)
(declare-fun it13 () Int)
(declare-fun bt1173 () Bool)
(declare-fun bt1174 () Bool)
(declare-fun bt1175 () Bool)
(declare-fun bt1176 () Bool)
(declare-fun it17 () Int)
(declare-fun it16 () Int)
(declare-fun it18 () Int)
(declare-fun bt25 () Bool)
(declare-fun bt28 () Bool)
(declare-fun bt26 () Bool)
(declare-fun bt27 () Bool)
(declare-fun it1107 () Int)
(declare-fun it1108 () Int)
(declare-fun it1109 () Int)
(declare-fun it1110 () Int)
(declare-fun bt1177 () Bool)
(declare-fun bt1178 () Bool)
(declare-fun bt1179 () Bool)
(declare-fun bt1180 () Bool)
(declare-fun it1112 () Int)
(declare-fun bt1184 () Bool)
(declare-fun it1113 () Int)
(declare-fun bt1182 () Bool)
(declare-fun bt1183 () Bool)
(declare-fun bt1181 () Bool)
(declare-fun it1111 () Int)
(declare-fun it1765 () Int)
(declare-fun it1766 () Int)
(declare-fun it1767 () Int)
(declare-fun it1768 () Int)
(declare-fun bt1849 () Bool)
(declare-fun bt1850 () Bool)
(declare-fun bt1851 () Bool)
(declare-fun bt1852 () Bool)
(declare-fun bt1856 () Bool)
(declare-fun bt1854 () Bool)
(declare-fun bt1853 () Bool)
(declare-fun it1771 () Int)
(declare-fun bt1855 () Bool)
(declare-fun it1769 () Int)
(declare-fun it1770 () Int)
(declare-fun it1772 () Int)
(declare-fun it1773 () Int)
(declare-fun it1774 () Int)
(declare-fun it1775 () Int)
(declare-fun bt1857 () Bool)
(declare-fun bt1858 () Bool)
(declare-fun bt1859 () Bool)
(declare-fun bt1860 () Bool)
(declare-fun it155 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it1100 (- 2)) 0))
(assert (= (+ it1101 (* it15 (- 1))) 0))
(assert (= (+ it1102 (* it14 (- 1))) 0))
(assert (= (+ (* it13 (- 1)) it1103) 0))
(assert (or (not bt1173) (and false bt1173)))
(assert (or bt1174 (and false (not bt1174))))
(assert (or (not bt1175) (and false bt1175)))
(assert (or (not bt1176) (and false bt1176)))
(assert (and bt27
     (not bt26)
     (not bt28)
     (not bt25)
     (= (+ it18 (- 1)) 0)
     bt1174
     (= (+ (* it16 (- 1)) it1103) 0)
     (not bt1176)
     (= (+ it1102 (* it17 (- 1))) 0)
     (not bt1173)
     (= (+ it1100 (- 2)) 0)
     (not bt1175)))
(assert (= (+ it1107 (- 2)) 0))
(assert (= (+ (* it18 (- 1)) it1108) 0))
(assert (= (+ it1109 (* it17 (- 1))) 0))
(assert (= (+ (* it16 (- 1)) it1110) 0))
(assert (or (and bt27 bt1177) (and (not bt27) (not bt1177))))
(assert (or (and (not bt28) (not bt1178)) (and bt28 bt1178)))
(assert (or (and (not bt26) (not bt1179)) (and bt26 bt1179)))
(assert (or (and (not bt25) (not bt1180)) (and bt25 bt1180)))
(assert (and (not bt1178)
     (= (+ (* it1111 (- 1)) it1108) 0)
     bt1177
     (not bt1181)
     (not bt1183)
     (<= (+ (* it1108 (- 1)) it1110) 0)
     (not bt1182)
     (= (+ it1107 (- 2)) 0)
     (= (+ it1110 (* it1113 (- 1))) 0)
     bt1184
     (= (+ it1109 (* it1112 (- 1))) 0)
     (not bt1180)
     (not bt1179)))
(assert (= (+ it1765 (- 2)) 0))
(assert (= (+ it1766 (* it1111 (- 1))) 0))
(assert (= (+ it1767 (* it1112 (- 1))) 0))
(assert (= (+ it1768 (* it1113 (- 1))) 0))
(assert (or (and bt1849 bt1182) (and (not bt1182) (not bt1849))))
(assert (or (and bt1181 bt1850) (and (not bt1181) (not bt1850))))
(assert (or (and bt1851 bt1183) (and (not bt1851) (not bt1183))))
(assert (or (and (not bt1852) (not bt1184)) (and bt1852 bt1184)))
(assert (and (= (+ it1765 (- 2)) 0)
     (= (+ (* it1770 (- 1)) it1767) 0)
     (= (+ (* it1769 (- 1)) it1766) 0)
     (not bt1855)
     (not bt1850)
     (= (+ (* it1771 (- 1)) it1768) 0)
     (> it1766 0)
     bt1852
     (not bt1849)
     bt1853
     (not bt1854)
     bt1856))
(assert (= (+ it1772 (- 2)) 0))
(assert (= (+ (* it1769 (- 1)) it1773) 0))
(assert (= (+ (* it1770 (- 1)) it1774) 0))
(assert (= (+ (* it1771 (- 1)) it1775) 0))
(assert (or (and (not bt1857) (not bt1854)) (and bt1854 bt1857)))
(assert (or (and (not bt1853) (not bt1858)) (and bt1858 bt1853)))
(assert (or (and bt1855 bt1859) (and (not bt1855) (not bt1859))))
(assert (or (and (not bt1860) (not bt1856)) (and bt1860 bt1856)))
(assert (let ((a!1 (+ (* (+ 0 it1773) (exp 2 (+ it155 (- 1))) (+ 0 (- 1)))
              (+ 0 it1775))))
  (and (>= (+ (* it1772 (- 1)) 2) 0)
       (>= (+ it1772 (- 2)) 0)
       (not bt1859)
       (> it1774 0)
       (> (+ (* it1773 (- 1)) it1775) 0)
       (> a!1 (+ 0 0))
       (>= (+ it155 (- 1)) 0)
       bt1857
       (not bt1860)
       (not bt1858))))
(check-sat)
