(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it1028 () Int)
(declare-fun it1029 () Int)
(declare-fun it15 () Int)
(declare-fun it14 () Int)
(declare-fun it1030 () Int)
(declare-fun it1031 () Int)
(declare-fun it13 () Int)
(declare-fun bt1153 () Bool)
(declare-fun bt1154 () Bool)
(declare-fun bt1155 () Bool)
(declare-fun bt1156 () Bool)
(declare-fun it155 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it1028 (- 2)) 0))
(assert (= (+ (* it15 (- 1)) it1029) 0))
(assert (= (+ it1030 (* it14 (- 1))) 0))
(assert (= (+ (* it13 (- 1)) it1031) 0))
(assert (or (not bt1153) (and false bt1153)))
(assert (or bt1154 (and false (not bt1154))))
(assert (or (not bt1155) (and false bt1155)))
(assert (or (not bt1156) (and false bt1156)))
(assert (let ((a!1 (+ (+ 0 it1031)
              (* (exp 2 (+ it155 (- 1))) (+ 0 it1029) (+ 0 (- 1))))))
  (and (>= (+ it1028 (- 2)) 0)
       bt1153
       (> it1030 0)
       (not bt1156)
       (not bt1155)
       (not bt1154)
       (> (+ it1031 (* it1029 (- 1))) 0)
       (> a!1 (+ 0 0))
       (>= (+ it155 (- 1)) 0)
       (>= (+ (* it1028 (- 1)) 2) 0))))
(check-sat)
