(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it202 () Int)
(declare-fun it15 () Int)
(declare-fun it203 () Int)
(declare-fun it14 () Int)
(declare-fun it204 () Int)
(declare-fun it205 () Int)
(declare-fun it13 () Int)
(declare-fun bt233 () Bool)
(declare-fun bt234 () Bool)
(declare-fun bt235 () Bool)
(declare-fun bt236 () Bool)
(declare-fun it155 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it202 (- 2)) 0))
(assert (= (+ it203 (* it15 (- 1))) 0))
(assert (= (+ it204 (* it14 (- 1))) 0))
(assert (= (+ (* it13 (- 1)) it205) 0))
(assert (or (not bt233) (and false bt233)))
(assert (or bt234 (and false (not bt234))))
(assert (or (not bt235) (and false bt235)))
(assert (or (not bt236) (and false bt236)))
(assert (let ((a!1 (+ (* (+ 0 it203) (exp 2 (+ it155 (- 1))) (+ 0 (- 1)))
              (+ 0 it205))))
  (and (> (+ (* it203 (- 1)) it205) 0)
       (> a!1 (+ 0 0))
       bt233
       (>= (+ (* it202 (- 1)) 2) 0)
       (> it204 0)
       (not bt236)
       (not bt235)
       (not bt234)
       (>= (+ it202 (- 2)) 0)
       (>= (+ it155 (- 1)) 0))))
(check-sat)
