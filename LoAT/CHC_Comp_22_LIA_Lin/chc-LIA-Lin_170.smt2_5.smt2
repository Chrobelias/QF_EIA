(set-info :status sat) ; swine result
(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it93 () Int)
(declare-fun it94 () Int)
(declare-fun it15 () Int)
(declare-fun it95 () Int)
(declare-fun it14 () Int)
(declare-fun it13 () Int)
(declare-fun it96 () Int)
(declare-fun bt113 () Bool)
(declare-fun bt114 () Bool)
(declare-fun bt115 () Bool)
(declare-fun bt116 () Bool)
(declare-fun it16 () Int)
(declare-fun it17 () Int)
(declare-fun it18 () Int)
(declare-fun bt25 () Bool)
(declare-fun bt28 () Bool)
(declare-fun bt26 () Bool)
(declare-fun bt27 () Bool)
(declare-fun it100 () Int)
(declare-fun it101 () Int)
(declare-fun it102 () Int)
(declare-fun it103 () Int)
(declare-fun bt117 () Bool)
(declare-fun bt118 () Bool)
(declare-fun bt119 () Bool)
(declare-fun bt120 () Bool)
(declare-fun it155 () Int)
(declare-fun it157 () Int)
(declare-fun it158 () Int)
(declare-fun it159 () Int)
(declare-fun it160 () Int)
(declare-fun bt181 () Bool)
(declare-fun bt182 () Bool)
(declare-fun bt183 () Bool)
(declare-fun bt184 () Bool)
(declare-fun bt123 () Bool)
(declare-fun it104 () Int)
(declare-fun bt122 () Bool)
(declare-fun bt121 () Bool)
(declare-fun it106 () Int)
(declare-fun bt124 () Bool)
(declare-fun it105 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it93 (- 2)) 0))
(assert (= (+ (* it15 (- 1)) it94) 0))
(assert (= (+ (* it14 (- 1)) it95) 0))
(assert (= (+ it96 (* it13 (- 1))) 0))
(assert (or (not bt113) (and false bt113)))
(assert (or bt114 (and false (not bt114))))
(assert (or (not bt115) (and false bt115)))
(assert (or (not bt116) (and false bt116)))
(assert (and bt27
     (not bt26)
     (not bt28)
     (not bt25)
     (= (+ it18 (- 1)) 0)
     bt114
     (not bt116)
     (not bt115)
     (= (+ (* it17 (- 1)) it95) 0)
     (= (+ it93 (- 2)) 0)
     (= (+ it96 (* it16 (- 1))) 0)
     (not bt113)))
(assert (= (+ it100 (- 2)) 0))
(assert (= (+ (* it18 (- 1)) it101) 0))
(assert (= (+ it102 (* it17 (- 1))) 0))
(assert (= (+ it103 (* it16 (- 1))) 0))
(assert (or (and (not bt27) (not bt117)) (and bt27 bt117)))
(assert (or (and bt28 bt118) (and (not bt28) (not bt118))))
(assert (or (and bt26 bt119) (and (not bt26) (not bt119))))
(assert (or (and bt25 bt120) (and (not bt25) (not bt120))))
(assert (let ((a!1 (+ (* (exp 2 (+ it155 (- 1))) (+ 0 it101) (+ 0 (- 1)))
              (+ 0 it103))))
  (and (not bt120)
       (not bt118)
       (>= (+ it100 (- 2)) 0)
       (> it102 0)
       (> (+ it103 (* it101 (- 1))) 0)
       (not bt119)
       bt117
       (>= (+ (* it100 (- 1)) 2) 0)
       (> a!1 (+ 0 0))
       (>= (+ it155 (- 1)) 0))))
(assert (= (+ it157 (* it100 (- 1))) 0))
(assert (= (+ (* (exp 2 it155) (+ 0 it101) (+ 0 (- 1))) (+ 0 it158))
   (+ 0 0)))
(assert (= (+ (* it102 (- 1)) it159) 0))
(assert (= (+ it160 (* it103 (- 1))) 0))
(assert (or bt181 (and false (not bt181))))
(assert (or (not bt182) (and false bt182)))
(assert (or (not bt183) (and false bt183)))
(assert (or (not bt184) (and false bt184)))
(assert (and bt181
     (= (+ it157 (- 2)) 0)
     (= (+ (* it105 (- 1)) it159) 0)
     (> it159 0)
     (not bt124)
     (= (+ it160 (* it106 (- 1))) 0)
     (not bt183)
     bt121
     bt122
     (> (+ it160 (* it158 (- 1))) 0)
     (not bt182)
     (= (+ it158 (* it104 (- 1))) 0)
     (not bt184)
     (not bt123)))
(check-sat)
