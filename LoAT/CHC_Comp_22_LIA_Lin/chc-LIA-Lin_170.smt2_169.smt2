(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it592 () Int)
(declare-fun it15 () Int)
(declare-fun it593 () Int)
(declare-fun it594 () Int)
(declare-fun it14 () Int)
(declare-fun it595 () Int)
(declare-fun it13 () Int)
(declare-fun bt669 () Bool)
(declare-fun bt670 () Bool)
(declare-fun bt671 () Bool)
(declare-fun bt672 () Bool)
(declare-fun it155 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it592 (- 2)) 0))
(assert (= (+ it593 (* it15 (- 1))) 0))
(assert (= (+ (* it14 (- 1)) it594) 0))
(assert (= (+ (* it13 (- 1)) it595) 0))
(assert (or (not bt669) (and false bt669)))
(assert (or bt670 (and false (not bt670))))
(assert (or (not bt671) (and false bt671)))
(assert (or (not bt672) (and false bt672)))
(assert (let ((a!1 (+ (* (+ 0 it593) (exp 2 (+ it155 (- 1))) (+ 0 (- 1)))
              (+ 0 it595))))
  (and bt669
       (> it594 0)
       (not bt672)
       (not bt671)
       (not bt670)
       (> (+ (* it593 (- 1)) it595) 0)
       (>= (+ it592 (- 2)) 0)
       (>= (+ (* it592 (- 1)) 2) 0)
       (> a!1 (+ 0 0))
       (>= (+ it155 (- 1)) 0))))
(check-sat)
