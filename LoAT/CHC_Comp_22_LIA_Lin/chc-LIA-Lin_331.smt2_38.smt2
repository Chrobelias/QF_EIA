(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it65 () Int)
(declare-fun it66 () Int)
(declare-fun it40 () Int)
(declare-fun it67 () Int)
(declare-fun it68 () Int)
(declare-fun it39 () Int)
(declare-fun it42 () Int)
(declare-fun it71 () Int)
(declare-fun it72 () Int)
(declare-fun it73 () Int)
(declare-fun it43 () Int)
(declare-fun it74 () Int)
(declare-fun it93 () Int)
(declare-fun it145 () Int)
(declare-fun it146 () Int)
(declare-fun it147 () Int)
(declare-fun it148 () Int)
(declare-fun it81 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it65 (- 2)) 0))
(assert (= it66 0))
(assert (= (+ it67 (* it40 (- 1))) 0))
(assert (= (+ (* it39 (- 1)) it68) 0))
(assert (and (> (+ (* it42 (- 1)) 5) 0) (= (* it66 (- 1)) 0) (= (+ it65 (- 2)) 0)))
(assert (= (+ it71 (- 2)) 0))
(assert (= (+ it72 (- 1)) 0))
(assert (= (+ it73 (* it42 (- 1))) 0))
(assert (= (+ it74 (* it43 (- 1))) 0))
(assert (let ((a!1 (* (* (+ 0 it73) (exp 16 (+ it93 (- 1)))) (+ 0 4)))
      (a!2 (* (* (+ 0 it73) (exp 16 (+ it93 (- 1)))) (+ 0 (- 1))))
      (a!4 (* (* (exp 16 (+ it93 (- 1))) (+ 0 it74)) (+ 0 2)))
      (a!5 (* (* (exp 16 (+ it93 (- 1))) (+ 0 it74)) (+ 0 (- 4))))
      (a!6 (* (* (+ 0 it73) (exp 16 (+ it93 (- 1)))) (+ 0 2))))
(let ((a!3 (+ a!2 (* (exp 16 (+ it93 (- 1))) (+ 0 it74)) (+ 0 5))))
  (and (> (+ a!1 (+ 0 5)) (+ 0 0))
       (> a!3 (+ 0 0))
       (> (+ a!4 (+ 0 5)) (+ 0 0))
       (> (+ a!1 a!5 (+ 0 5)) (+ 0 0))
       (> (+ (* it74 2) 5) 0)
       (>= (+ (* it72 (- 1)) 1) 0)
       (> (+ (* it73 (- 1)) it74 5) 0)
       (> (+ (* it73 4) (* it74 (- 4)) 5) 0)
       (> (+ (* it73 (- 16)) 5) 0)
       (= (+ (* it71 (- 1)) 2) 0)
       (>= (+ it71 (- 2)) 0)
       (= (+ it72 (- 1)) 0)
       (> (+ (* it74 (- 8)) 5) 0)
       (> (+ (* it73 4) 5) 0)
       (> (+ (* it73 2) (* it74 2) 5) 0)
       (> (+ (* it73 (- 8)) (* it74 (- 8)) 5) 0)
       (>= (+ it72 (- 1)) 0)
       (>= (+ it93 (- 1)) 0)
       (> (+ a!6 a!4 (+ 0 5)) (+ 0 0))
       (>= (+ (* it71 (- 1)) 2) 0)))))
(assert (= (+ it145 (* it71 (- 1))) 0))
(assert (= (+ it146 (- 1)) 0))
(assert (= (+ (* (+ 0 it73) (exp 16 it93) (+ 0 (- 1))) (+ 0 it147))
   (+ 0 0)))
(assert (= (+ (+ 0 it148) (* (exp 16 it93) (+ 0 it74) (+ 0 (- 1))))
   (+ 0 0)))
(assert (let ((a!1 (* (* (exp 16 (+ it81 (- 1))) (+ 0 it148)) (+ 0 (- 4))))
      (a!2 (* (* (exp 16 (+ it81 (- 1))) (+ 0 it147)) (+ 0 4)))
      (a!3 (* (* (exp 16 (+ it81 (- 1))) (+ 0 it148)) (+ 0 2)))
      (a!4 (* (* (exp 16 (+ it81 (- 1))) (+ 0 it147)) (+ 0 2)))
      (a!5 (* (* (exp 16 (+ it81 (- 1))) (+ 0 it147)) (+ 0 (- 1)))))
(let ((a!6 (+ (* (exp 16 (+ it81 (- 1))) (+ 0 it148)) a!5 (+ 0 5))))
  (and (>= (+ (* it146 (- 1)) 1) 0)
       (>= (+ (* it145 (- 1)) 2) 0)
       (>= (+ it145 (- 2)) 0)
       (> (+ (* it148 2) (* it147 2) 5) 0)
       (> (+ (* it148 (- 8)) (* it147 (- 8)) 5) 0)
       (> (+ (* it148 2) 5) 0)
       (> (+ (* it148 (- 8)) 5) 0)
       (> (+ a!1 a!2 (+ 0 5)) (+ 0 0))
       (> (+ (* it147 4) 5) 0)
       (> (+ a!2 (+ 0 5)) (+ 0 0))
       (> (+ a!3 a!4 (+ 0 5)) (+ 0 0))
       (>= (+ it81 (- 1)) 0)
       (> (+ (* it148 (- 4)) (* it147 4) 5) 0)
       (> a!6 (+ 0 0))
       (>= (+ it146 (- 1)) 0)
       (> (+ it148 (* it147 (- 1)) 5) 0)
       (> (+ a!3 (+ 0 5)) (+ 0 0))
       (> (+ (* it147 (- 16)) 5) 0)))))
(check-sat)
