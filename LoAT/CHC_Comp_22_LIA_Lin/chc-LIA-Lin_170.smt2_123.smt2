(set-info :status sat) ; swine result
(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it579 () Int)
(declare-fun it580 () Int)
(declare-fun it15 () Int)
(declare-fun it14 () Int)
(declare-fun it581 () Int)
(declare-fun it582 () Int)
(declare-fun it13 () Int)
(declare-fun bt633 () Bool)
(declare-fun bt634 () Bool)
(declare-fun bt635 () Bool)
(declare-fun bt636 () Bool)
(declare-fun it17 () Int)
(declare-fun it16 () Int)
(declare-fun it18 () Int)
(declare-fun bt25 () Bool)
(declare-fun bt28 () Bool)
(declare-fun bt26 () Bool)
(declare-fun bt27 () Bool)
(declare-fun it588 () Int)
(declare-fun it589 () Int)
(declare-fun it590 () Int)
(declare-fun it591 () Int)
(declare-fun bt637 () Bool)
(declare-fun bt638 () Bool)
(declare-fun bt639 () Bool)
(declare-fun bt640 () Bool)
(declare-fun it356 () Int)
(declare-fun it665 () Int)
(declare-fun it666 () Int)
(declare-fun it667 () Int)
(declare-fun it668 () Int)
(declare-fun bt709 () Bool)
(declare-fun bt710 () Bool)
(declare-fun bt711 () Bool)
(declare-fun bt712 () Bool)
(declare-fun it593 () Int)
(declare-fun bt644 () Bool)
(declare-fun it594 () Int)
(declare-fun it592 () Int)
(declare-fun bt641 () Bool)
(declare-fun bt642 () Bool)
(declare-fun bt643 () Bool)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it579 (- 2)) 0))
(assert (= (+ (* it15 (- 1)) it580) 0))
(assert (= (+ it581 (* it14 (- 1))) 0))
(assert (= (+ (* it13 (- 1)) it582) 0))
(assert (or (and false bt633) (not bt633)))
(assert (or (and false (not bt634)) bt634))
(assert (or (and false bt635) (not bt635)))
(assert (or (and false bt636) (not bt636)))
(assert (and bt27
     (not bt26)
     (not bt28)
     (not bt25)
     (= (+ it18 (- 1)) 0)
     (= (+ it579 (- 2)) 0)
     (= (+ (* it16 (- 1)) it582) 0)
     (not bt633)
     (= (+ it581 (* it17 (- 1))) 0)
     bt634
     (not bt635)
     (not bt636)))
(assert (= (+ it588 (- 2)) 0))
(assert (= (+ (* it18 (- 1)) it589) 0))
(assert (= (+ it590 (* it17 (- 1))) 0))
(assert (= (+ (* it16 (- 1)) it591) 0))
(assert (or (and bt27 bt637) (and (not bt27) (not bt637))))
(assert (or (and bt28 bt638) (and (not bt28) (not bt638))))
(assert (or (and (not bt26) (not bt639)) (and bt26 bt639)))
(assert (or (and (not bt25) (not bt640)) (and bt25 bt640)))
(assert (let ((a!1 (+ (* (+ 0 it589) (exp 3 (+ it356 (- 1))) (+ 0 (- 1)))
              (+ 0 it591))))
  (and (> a!1 (+ 0 0))
       (> (+ (* it589 (- 1)) it591) 0)
       (>= (+ (* it588 (- 1)) 2) 0)
       bt637
       (not bt638)
       (>= (* it590 (- 1)) 0)
       (>= (+ it588 (- 2)) 0)
       (not bt640)
       (not bt639)
       (>= (+ it356 (- 1)) 0))))
(assert (= (+ (* it588 (- 1)) it665) 0))
(assert (= (+ (* (+ 0 it589) (exp 3 it356) (+ 0 (- 1))) (+ 0 it666))
   (+ 0 0)))
(assert (= (+ (* it590 (- 1)) it667) 0))
(assert (= (+ it668 (* it591 (- 1))) 0))
(assert (or (and false (not bt709)) bt709))
(assert (or (and false bt710) (not bt710)))
(assert (or (and false bt711) (not bt711)))
(assert (or (and false bt712) (not bt712)))
(assert (let ((a!1 (and (not bt641)
                bt643
                (not bt642)
                (= (+ (* it592 (- 1)) it666) 0)
                (= (+ it668 (* it594 (- 1))) 0)
                (not bt644)
                (= (+ (* it593 (- 1)) it667) 0)))
      (a!2 (and (and (not bt643) bt642)
                bt641
                (= (+ (* it592 (- 1)) it666) 0)
                (= (+ it668 (* it594 (- 1))) 0)
                (not bt644)
                (= (+ (* it593 (- 1)) it667) 0)))
      (a!4 (and (and (not bt641) (not bt643))
                bt644
                (not bt642)
                (= (+ (* it592 (- 1)) it666) 0)
                (= (+ it668 (* it594 (- 1))) 0)
                (= (+ (* it593 (- 1)) it667) 0)))
      (a!6 (and (not bt643)
                bt644
                (not bt642)
                bt641
                (= (+ (* it592 (- 1)) it666) 0)
                (= (+ it668 (* it594 (- 1))) 0)
                (= (+ (* it593 (- 1)) it667) 0)))
      (a!7 (and (and (not bt641) (not bt643))
                (not bt642)
                (= (+ (* it592 (- 1)) it666) 0)
                (= (+ it668 (* it594 (- 1))) 0)
                (not bt644)
                (= (+ (* it593 (- 1)) it667) 0)))
      (a!8 (and (and bt643 (not bt642) bt641)
                (= (+ (* it592 (- 1)) it666) 0)
                (= (+ it668 (* it594 (- 1))) 0)
                (not bt644)
                (= (+ (* it593 (- 1)) it667) 0)))
      (a!9 (and (and (not bt641) (not bt643))
                (= (+ it592 (- 1)) 0)
                bt642
                (= (+ it668 (* it594 (- 1))) 0)
                (not bt644)
                (= (+ (* it593 (- 1)) it667) 0)))
      (a!10 (and (and (and (not bt641) (not bt643)) bt642)
                 bt644
                 (= (+ (* it592 (- 1)) it666) 0)
                 (= (+ it668 (* it594 (- 1))) 0)
                 (= (+ (* it593 (- 1)) it667) 0)))
      (a!11 (and (and (and (not bt641) (not bt643)) bt642)
                 (= (+ (* it592 (- 1)) it666) 0)
                 (= (+ it668 (* it594 (- 1))) 0)
                 (not bt644)
                 (= (+ (* it593 (- 1)) it667) 0)))
      (a!12 (and (and (not bt643) bt642)
                 bt644
                 bt641
                 (= (+ (* it592 (- 1)) it666) 0)
                 (= (+ it668 (* it594 (- 1))) 0)
                 (= (+ (* it593 (- 1)) it667) 0)))
      (a!13 (and (not bt641)
                 bt642
                 bt643
                 (= (+ (* it592 (- 1)) it666) 0)
                 (= (+ it668 (* it594 (- 1))) 0)
                 (not bt644)
                 (= (+ (* it593 (- 1)) it667) 0)))
      (a!14 (and (= (+ (* it592 (- 1)) (* it666 3)) 0)
                 bt642
                 bt643
                 bt641
                 (= (+ it668 (* it594 (- 1))) 0)
                 (not bt644)
                 (= (+ (* it593 (- 1)) it667) 0)))
      (a!15 (and (and bt643 (not bt642) bt641)
                 (= (+ (* it592 (- 1)) (* it666 2)) 0)
                 (= (+ it668 (* it594 (- 1))) 0)
                 (not bt644)
                 (= (+ (* it593 (- 1)) it667) 0))))
(let ((a!3 (or (not bt709)
               bt712
               a!2
               bt710
               bt711
               (<= (+ it668 (* it666 (- 1))) 0)))
      (a!5 (or (not bt709)
               a!4
               bt712
               bt710
               bt711
               (> (+ it668 (* it666 (- 1))) 0))))
  (and (or a!1 (<= it667 0) (not bt710) (not bt709) bt712 bt711)
       a!3
       a!5
       (or (not bt712) a!6 bt710 bt711 bt709 (<= it666 0))
       (or bt712 a!7 bt710 bt711 bt709)
       (or (not bt711) (not bt710) (not bt709) bt712 a!8)
       (or (not bt712) (not bt709) a!7 bt710 bt711)
       (or (not bt710) a!9 bt712 bt711 bt709)
       (or (not bt712) (not bt710) a!10 bt711 bt709)
       (or (not bt711) a!11 (not bt710) bt712 bt709)
       (or (not bt712) a!12 (not bt710) (not bt709) bt711)
       (= (+ it665 (- 2)) 0)
       (or (> it667 0) a!13 (not bt710) (not bt709) bt712 bt711)
       (or (not bt711) (not bt709) a!14 bt712 bt710)
       (or (not bt712) (> it666 0) a!12 bt710 bt711 bt709)
       (or (not bt711) bt712 bt710 bt709 a!15)))))
(check-sat)
