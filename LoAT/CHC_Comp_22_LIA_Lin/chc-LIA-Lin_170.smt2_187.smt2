(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it787 () Int)
(declare-fun it788 () Int)
(declare-fun it15 () Int)
(declare-fun it14 () Int)
(declare-fun it789 () Int)
(declare-fun it13 () Int)
(declare-fun it790 () Int)
(declare-fun bt841 () Bool)
(declare-fun bt842 () Bool)
(declare-fun bt843 () Bool)
(declare-fun bt844 () Bool)
(declare-fun it155 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it787 (- 2)) 0))
(assert (= (+ (* it15 (- 1)) it788) 0))
(assert (= (+ it789 (* it14 (- 1))) 0))
(assert (= (+ it790 (* it13 (- 1))) 0))
(assert (or (not bt841) (and false bt841)))
(assert (or bt842 (and false (not bt842))))
(assert (or (not bt843) (and false bt843)))
(assert (or (not bt844) (and false bt844)))
(assert (let ((a!1 (+ (* (exp 2 (+ it155 (- 1))) (+ 0 it788) (+ 0 (- 1)))
              (+ 0 it790))))
  (and bt841
       (>= (+ it155 (- 1)) 0)
       (> it789 0)
       (not bt842)
       (>= (+ it787 (- 2)) 0)
       (not bt844)
       (> (+ it790 (* it788 (- 1))) 0)
       (not bt843)
       (>= (+ (* it787 (- 1)) 2) 0)
       (> a!1 (+ 0 0)))))
(check-sat)
