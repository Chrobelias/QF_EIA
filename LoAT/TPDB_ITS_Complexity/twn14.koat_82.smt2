(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it523 () Int)
(declare-fun it524 () Int)
(declare-fun i2 () Int)
(declare-fun it525 () Int)
(declare-fun i3 () Int)
(declare-fun it526 () Int)
(declare-fun i4 () Int)
(declare-fun it527 () Int)
(declare-fun i5 () Int)
(declare-fun it528 () Int)
(declare-fun i6 () Int)
(declare-fun it529 () Int)
(declare-fun i7 () Int)
(declare-fun it801 () Int)
(declare-fun it802 () Int)
(declare-fun it803 () Int)
(declare-fun it804 () Int)
(declare-fun it805 () Int)
(declare-fun it806 () Int)
(declare-fun it807 () Int)
(declare-fun it453 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it523 (- 2)) 0))
(assert (= (+ (* i2 (- 1)) it524 (- 1)) 0))
(assert (= (+ (* i3 (- 1)) it525) 0))
(assert (= (+ (* i4 (- 1)) it526) 0))
(assert (= (+ (* i5 (- 1)) it527) 0))
(assert (= (+ (* i6 (- 1)) it528) 0))
(assert (= (+ (* i7 (- 1)) it529) 0))
(assert (and (<= (+ (* it528 (- 1)) (- 5)) 0)
     (> it525 0)
     (= (+ it523 (- 2)) 0)
     (<= (+ it528 (- 5)) 0)))
(assert (= (+ it801 (- 3)) 0))
(assert (= (+ (* it524 (- 1)) it802 (- 2)) 0))
(assert (= (+ it803 (* it525 (- 1))) 0))
(assert (= (+ it804 (* it525 (- 1))) 0))
(assert (= (+ it805 (* it529 (- 1))) 0))
(assert (= (+ (* it528 (- 1)) it806) 0))
(assert (= (+ it807 (* it529 (- 1))) 0))
(assert (let ((a!1 (> (+ (* (exp it806 3) (+ 0 (- 8)))
                 (* (exp it804 2) (+ 0 (- 16)))
                 (+ 0 (* it805 9))
                 (* (exp it806 5) (+ 0 (- 1))))
              (+ 0 0)))
      (a!2 (* (* (exp 81 (+ it453 (- 1))) (exp it806 3)) (+ 0 (- 3))))
      (a!3 (* (exp it804 2) (exp (exp 16 (+ it453 (- 1))) (+ 0 2))))
      (a!4 (* (* (exp 81 (+ it453 (- 1))) (+ 0 it805)) (+ 0 3)))
      (a!6 (* (* (exp 81 (+ it453 (- 1))) (exp it806 3)) (+ 0 (- 1))))
      (a!8 (* (* (exp 81 (+ it453 (- 1))) (exp it806 3)) (+ 0 (- 27))))
      (a!9 (* (* (exp 81 (+ it453 (- 1))) (+ 0 it805)) (+ 0 27)))
      (a!11 (> (+ (* (exp it806 3) (+ 0 (- 2)))
                  (* (exp it804 2) (+ 0 (- 4)))
                  (+ 0 (* it805 3))
                  (* (exp it806 5) (+ 0 (- 1))))
               (+ 0 0)))
      (a!12 (> (+ (* (exp it804 2) (+ 0 (- 1)))
                  (+ 0 it805)
                  (* (exp it806 5) (+ 0 (- 1))))
               (+ 0 0)))
      (a!13 (* (* (exp 81 (+ it453 (- 1))) (exp it806 3)) (+ 0 (- 9))))
      (a!14 (* (* (exp 81 (+ it453 (- 1))) (+ 0 it805)) (+ 0 9))))
(let ((a!5 (> (+ a!2
                 (exp it806 3)
                 (* a!3 (+ 0 (- 4)))
                 (* (exp it806 5) (+ 0 (- 1)))
                 a!4)
              (+ 0 0)))
      (a!7 (+ a!6
              (exp it806 3)
              (* a!3 (+ 0 (- 1)))
              (* (exp it806 5) (+ 0 (- 1)))
              (* (exp 81 (+ it453 (- 1))) (+ 0 it805))))
      (a!10 (> (+ a!8
                  (exp it806 3)
                  (* a!3 (+ 0 (- 64)))
                  (* (exp it806 5) (+ 0 (- 1)))
                  a!9)
               (+ 0 0)))
      (a!15 (> (+ a!13
                  (exp it806 3)
                  (* a!3 (+ 0 (- 16)))
                  (* (exp it806 5) (+ 0 (- 1)))
                  a!14)
               (+ 0 0))))
  (and a!1
       (> it804 0)
       (>= (+ it801 (- 3)) 0)
       a!5
       (> (* it804 8) 0)
       (> (* it804 4) 0)
       (> a!7 (+ 0 0))
       (>= (+ it453 (- 1)) 0)
       (> (* it804 2) 0)
       a!10
       a!11
       a!12
       a!15
       (>= (+ (* it801 (- 1)) 3) 0)))))
(check-sat)
