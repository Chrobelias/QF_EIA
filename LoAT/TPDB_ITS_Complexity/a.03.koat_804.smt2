(set-info :status unsat) ; swine result
(set-logic ALL)
(declare-fun i4 () Int)
(declare-fun i1 () Int)
(declare-fun i3 () Int)
(declare-fun it1231 () Int)
(declare-fun it1232 () Int)
(declare-fun i2 () Int)
(declare-fun it1233 () Int)
(declare-fun it1234 () Int)
(declare-fun it1235 () Int)
(declare-fun it1236 () Int)
(declare-fun it1237 () Int)
(declare-fun it1238 () Int)
(declare-fun it1239 () Int)
(declare-fun it1240 () Int)
(declare-fun it1241 () Int)
(declare-fun it1242 () Int)
(declare-fun it1315 () Int)
(declare-fun it1316 () Int)
(declare-fun it1317 () Int)
(declare-fun it1318 () Int)
(declare-fun it1319 () Int)
(declare-fun it1320 () Int)
(declare-fun it1321 () Int)
(declare-fun it1322 () Int)
(declare-fun it1323 () Int)
(declare-fun it1324 () Int)
(declare-fun it1325 () Int)
(declare-fun it1326 () Int)
(declare-fun it1327 () Int)
(declare-fun it1328 () Int)
(declare-fun it1329 () Int)
(declare-fun it1330 () Int)
(declare-fun it1331 () Int)
(declare-fun it1332 () Int)
(declare-fun it57 () Int)
(assert (and (>= (+ i3 (- 2)) 0) (= (+ i1 (- 1)) 0) (>= (+ i4 (- 2)) 0)))
(assert (= (+ it1231 (- 3)) 0))
(assert (= (+ (* i2 (- 1)) it1232 (- 2)) 0))
(assert (= (+ it1233 (* i3 (- 1)) 1) 0))
(assert (= (+ (* i4 (- 1)) it1234) 0))
(assert (= (+ (* i3 (- 1)) it1235 1) 0))
(assert (= (+ it1236 (* i3 (- 2)) 2) 0))
(assert (and (>= (+ (* it1234 (- 1)) 4) 0)
     (>= (+ it1231 (- 3)) 0)
     (>= (+ (* it1231 (- 1)) 3) 0)
     (>= (+ it1234 (- 2)) 0)
     (>= (+ it1236 (* it1234 (- 1))) 0)
     (>= (+ (* it1236 (- 1)) it1234) 0)
     (>= (+ it1233 (- 1)) 0)
     (>= (+ it1233 (- 2)) 0)
     (<= (+ (* it1233 2) (* it1236 (- 1)) (- 2)) 0)
     (>= 1 0)
     (>= 0 0)))
(assert (= (+ it1237 (* it1231 (- 1))) 0))
(assert (= (+ (* it1233 (- 3)) it1238 (* it1232 (- 1)) 3) 0))
(assert (= (+ it1239 (- 1)) 0))
(assert (= (+ it1240 (* it1234 (- 1))) 0))
(assert (= (+ it1241 (- 1)) 0))
(assert (= (+ it1242 (- 2)) 0))
(assert (let ((a!1 (>= (+ (+ it1240 (* it1242 (- 1))) (- 1)) 0)))
  (and a!1 (>= (+ it1240 (* it1242 (- 1))) 0) (= (+ it1237 (- 3)) 0))))
(assert (= (+ it1315 (- 4)) 0))
(assert (= (+ it1316 (* it1238 (- 1)) (- 1)) 0))
(assert (= (+ it1317 (* it1239 (- 1))) 0))
(assert (= (+ it1318 (* it1240 (- 1))) 0))
(assert (= (+ it1319 (* it1241 (- 1))) 0))
(assert (= (+ it1320 (* it1242 (- 1))) 0))
(assert (let ((a!1 (>= (+ (+ (* it1317 (- 2)) it1318) (- 1)) 0))
      (a!2 (>= (+ (+ (* it1317 (- 2)) it1318) (- 2)) 0)))
  (and (>= (+ it1317 (- 1)) 0)
       (>= (+ (* it1315 (- 1)) 4) 0)
       (>= (+ it1318 (- 2)) 0)
       (>= (+ it1318 (- 3)) 0)
       (>= (+ it1315 (- 4)) 0)
       (>= (+ (* it1317 (- 1)) 1) 0)
       a!1
       a!2
       (>= 1 0)
       (>= 0 0))))
(assert (= (+ it1321 (* it1315 (- 1))) 0))
(assert (= (+ (* it1317 6) (* it1318 (- 3)) it1322 (* it1316 (- 1)) 3) 0))
(assert (= (+ (* it1317 (- 1)) it1323) 0))
(assert (= (+ (* it1317 (- 2)) it1324 (- 1)) 0))
(assert (= (+ (* it1317 (- 1)) it1325) 0))
(assert (= (+ (* it1317 (- 2)) it1326 (- 1)) 0))
(assert (and (>= (+ it1324 (- 2)) 0)
     (= (+ it1321 (- 4)) 0)
     (>= (+ it1324 (- 3)) 0)
     (= (+ it1323 (- 1)) 0)))
(assert (= (+ it1327 (- 3)) 0))
(assert (= (+ it1328 (* it1322 (- 1)) (- 2)) 0))
(assert (= (+ it1329 (* it1323 (- 1))) 0))
(assert (= (+ it1330 (* it1324 (- 1)) 1) 0))
(assert (= (+ it1331 (* it1323 (- 1))) 0))
(assert (= (+ it1332 (* it1323 (- 2))) 0))
(assert (let ((a!1 (+ (+ 0 it1330)
              (* (exp 2 (+ it57 (- 1))) (+ 0 it1332) (+ 0 (- 1)))))
      (a!2 (>= (+ (+ it1330 (* it1332 (- 1))) (- 1)) 0)))
  (and (>= (+ it1327 (- 3)) 0)
       (>= a!1 (+ 0 0))
       (>= (+ a!1 (+ 0 (- 1))) (+ 0 0))
       a!2
       (>= (+ (* it1327 (- 1)) 3) 0)
       (>= (+ it1330 (* it1332 (- 1))) 0)
       (>= (+ it1332 (- 1)) 0)
       (>= (+ it57 (- 1)) 0))))
(check-sat)
