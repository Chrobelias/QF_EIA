(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it1 () Int)
(declare-fun i2 () Int)
(declare-fun it2 () Int)
(declare-fun i3 () Int)
(declare-fun it3 () Int)
(declare-fun it4 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun it5 () Int)
(declare-fun i6 () Int)
(declare-fun it6 () Int)
(declare-fun it13 () Int)
(declare-fun it866 () Int)
(declare-fun it867 () Int)
(declare-fun it868 () Int)
(declare-fun it869 () Int)
(declare-fun it870 () Int)
(declare-fun it871 () Int)
(declare-fun it872 () Int)
(declare-fun it92 () Int)
(declare-fun it488 () Int)
(declare-fun it953 () Int)
(declare-fun it954 () Int)
(declare-fun it955 () Int)
(declare-fun it956 () Int)
(declare-fun it957 () Int)
(declare-fun it958 () Int)
(declare-fun it1073 () Int)
(declare-fun it1074 () Int)
(declare-fun it1075 () Int)
(declare-fun it1076 () Int)
(declare-fun it1077 () Int)
(declare-fun it1078 () Int)
(declare-fun it961 () Int)
(declare-fun it960 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it1 (- 2)) 0))
(assert (= (+ it2 (* i2 (- 1)) (- 1)) 0))
(assert (= (+ it3 (* i3 (- 1))) 0))
(assert (= (+ (* i4 (- 1)) it4) 0))
(assert (= (+ it5 (* i5 (- 1))) 0))
(assert (= (+ it6 (* i6 (- 1))) 0))
(assert (let ((a!1 (> (+ (+ it3 (* it13 (- 2))) 2) 0))
      (a!2 (> (+ (+ it3 (* it13 (- 2))) 1) 0)))
  (and (>= (+ (* it1 (- 1)) 2) 0)
       (>= (+ it13 (- 1)) 0)
       (>= (+ it1 (- 2)) 0)
       a!1
       a!2)))
(assert (= (+ it866 (* it1 (- 1))) 0))
(assert (= (+ (* it2 (- 1)) it867 (* it13 (- 2))) 0))
(assert (= (+ (* it3 (- 1)) (* it13 2) it868) 0))
(assert (= (+ (+ 0 it869) (* (exp (- 1) it13) (+ 0 it4) (+ 0 (- 1))))
   (+ 0 0)))
(assert (= (+ (* (+ 0 it5) (exp (- 1) it13) (+ 0 (- 1))) (+ 0 it870))
   (+ 0 0)))
(assert (= (+ (* (+ 0 it3) (exp it13 2) (+ 0 12))
      (* (exp it13 3) (+ 0 (- 8)))
      (* (exp it13 2) (+ 0 6))
      (+ 0 (* it3 it13 (- 6)))
      (+ 0 (* it6 (- 3)))
      (* (exp it3 2) (+ 0 it13) (+ 0 (- 6)))
      (+ 0 (* it13 (- 1)))
      (+ 0 (* it871 3)))
   (+ 0 0)))
(assert (let ((a!1 (+ (* it872 (- 2))
              (* it872 (+ it488 (- 1)) (- 2))
              it868
              (* (+ it488 (- 1)) it92 (- 2))
              (* it92 (- 2))))
      (a!2 (+ (* it872 (+ it488 (- 1)) (- 2))
              it868
              (* (+ it488 (- 1)) it92 (- 2))
              (* it92 (- 2)))))
  (and (> (+ (* it872 (- 2)) it868 (* it92 (- 2)) 1) 0)
       (>= (+ (* it866 (- 1)) 2) 0)
       (>= (+ it488 (- 1)) 0)
       (> (+ it868 (* it92 (- 2)) 2) 0)
       (> (+ a!1 1) 0)
       (> (+ a!1 2) 0)
       (> (+ a!2 1) 0)
       (>= (+ it92 (- 1)) 0)
       (> (+ a!2 2) 0)
       (>= (+ it866 (- 2)) 0)
       (>= (+ it872 (- 1)) 0))))
(assert (= (+ (* it866 (- 1)) it953) 0))
(assert (= (+ (* it488 it92 (- 2)) (* it867 (- 1)) (* it872 it488 (- 2)) it954) 0))
(assert (= (+ it955 (* it488 it92 2) (* it872 it488 2) (* it868 (- 1))) 0))
(assert (let ((a!1 (* (+ 0 it869)
              (exp (- 1) (+ (* it488 it92) (* it872 it488)))
              (+ 0 (- 1)))))
  (= (+ (+ 0 it956) a!1) (+ 0 0))))
(assert (let ((a!1 (* (exp (- 1) (+ (* it488 it92) (* it872 it488)))
              (+ 0 it870)
              (+ 0 (- 1)))))
  (= (+ a!1 (+ 0 it957)) (+ 0 0))))
(assert (let ((a!1 (+ (* (+ 0 it872) (exp it488 3) (exp it92 2) (+ 0 (- 24)))
              (* (* (exp it872 2) (exp it488 2)) (+ 0 6))
              (+ 0 (* it958 3))
              (* (* (+ 0 it872) (exp it488 2)) (+ 0 it92) (+ 0 12))
              (* (+ 0 it488) (exp it868 2) (+ 0 it92) (+ 0 (- 6)))
              (* (* (+ 0 it872) (exp it488 2))
                 (+ 0 it868)
                 (+ 0 it92)
                 (+ 0 24))
              (* (exp it488 2) (+ 0 it868) (exp it92 2) (+ 0 12))
              (+ 0 (* it488 it92 (- 1)))
              (* (exp it872 3) (exp it488 3) (+ 0 (- 8)))
              (* (* (exp it872 2) (exp it488 2)) (+ 0 it868) (+ 0 12))
              (* (exp it488 3) (exp it92 3) (+ 0 (- 8)))
              (+ 0 (* (* it872 it488) (- 1)))
              (+ 0 (* (* it872 it488) it868 (- 6)))
              (* (exp it872 2) (exp it488 3) (+ 0 it92) (+ 0 (- 24)))
              (+ 0 (* it488 it868 it92 (- 6)))
              (* (+ 0 (* it872 it488)) (exp it868 2) (+ 0 (- 6)))
              (+ 0 (* it871 (- 3)))
              (* (exp it488 2) (exp it92 2) (+ 0 6)))))
  (= a!1 (+ 0 0))))
(assert (and (> it955 0) (> (+ it955 (- 1)) 0) (= (+ it953 (- 2)) 0)))
(assert (= (+ it1073 (- 2)) 0))
(assert (= (+ it1074 (* it954 (- 1)) (- 2)) 0))
(assert (= (+ (* it955 (- 1)) it1075 2) 0))
(assert (= (+ it956 it1076) 0))
(assert (= (+ it1077 it957) 0))
(assert (let ((a!1 (+ (+ 0 (* it958 (- 1)))
              (* (exp (+ it955 (- 1)) 2) (+ 0 (- 1)))
              (+ 0 it1078)
              (* (exp it955 2) (+ 0 (- 1))))))
  (= a!1 (+ 0 0))))
(assert (let ((a!1 (> (+ (+ (* it961 (- 2)) it1075) 1) 0))
      (a!2 (> (+ (+ (* it961 (- 2)) it1075) 2) 0))
      (a!3 (+ (+ (+ (* it961 (- 2)) it1075) (* it960 (- 2))) 2))
      (a!4 (+ (+ (+ (* it961 (- 2)) it1075) (* it960 (- 2))) 1)))
  (and a!1
       a!2
       (<= (+ (* it961 2) (* it960 2)) 0)
       (> a!3 0)
       (>= (+ (* it1073 (- 1)) 2) 0)
       (>= (+ it1073 (- 2)) 0)
       (> a!4 0)
       (>= (+ it960 (- 1)) 0)
       (>= (+ it961 (- 1)) 0))))
(check-sat)
