(set-info :status unsat) ; swine result
(set-logic ALL)
(declare-fun i4 () Int)
(declare-fun i1 () Int)
(declare-fun i3 () Int)
(declare-fun it315 () Int)
(declare-fun it316 () Int)
(declare-fun i2 () Int)
(declare-fun it317 () Int)
(declare-fun it318 () Int)
(declare-fun it319 () Int)
(declare-fun it320 () Int)
(declare-fun it364 () Int)
(declare-fun it365 () Int)
(declare-fun it366 () Int)
(declare-fun it367 () Int)
(declare-fun it368 () Int)
(declare-fun it369 () Int)
(declare-fun it57 () Int)
(declare-fun it378 () Int)
(declare-fun it379 () Int)
(declare-fun it380 () Int)
(declare-fun it381 () Int)
(declare-fun it382 () Int)
(declare-fun it383 () Int)
(declare-fun it19 () Int)
(declare-fun it88 () Int)
(assert (and (>= (+ i3 (- 2)) 0) (= (+ i1 (- 1)) 0) (>= (+ i4 (- 2)) 0)))
(assert (= (+ it315 (- 3)) 0))
(assert (= (+ (* i2 (- 1)) it316 (- 2)) 0))
(assert (= (+ (* i3 (- 1)) it317 1) 0))
(assert (= (+ (* i4 (- 1)) it318) 0))
(assert (= (+ it319 (* i3 (- 1)) 1) 0))
(assert (= (+ (* i3 (- 2)) it320 2) 0))
(assert (and (>= (+ it318 (- 2)) 0)
     (>= (+ (* it315 (- 1)) 3) 0)
     (>= (+ (* it318 (- 1)) it320) 0)
     (>= (+ it318 (* it320 (- 1))) 0)
     (<= (+ (* it320 (- 1)) (* it317 2) (- 2)) 0)
     (>= (+ it317 (- 2)) 0)
     (>= (+ it317 (- 1)) 0)
     (>= (+ (* it318 (- 1)) 4) 0)
     (>= (+ it315 (- 3)) 0)
     (>= 1 0)
     (>= 0 0)))
(assert (= (+ (* it315 (- 1)) it364) 0))
(assert (= (+ (* it316 (- 1)) (* it317 (- 3)) it365 3) 0))
(assert (= (+ it366 (- 1)) 0))
(assert (= (+ (* it318 (- 1)) it367) 0))
(assert (= (+ it368 (- 1)) 0))
(assert (= (+ it369 (- 2)) 0))
(assert (let ((a!1 (+ (+ 0 it367)
              (* (+ 0 it369) (exp 2 (+ it57 (- 1))) (+ 0 (- 1)))))
      (a!2 (>= (+ (+ (* it369 (- 1)) it367) (- 1)) 0)))
  (and (>= (+ (* it369 (- 1)) it367) 0)
       (>= (+ a!1 (+ 0 (- 1))) (+ 0 0))
       (>= a!1 (+ 0 0))
       (>= (+ it369 (- 1)) 0)
       a!2
       (>= (+ it57 (- 1)) 0)
       (>= (+ it364 (- 3)) 0)
       (>= (+ (* it364 (- 1)) 3) 0))))
(assert (= (+ (* it364 (- 1)) it378) 0))
(assert (= (+ it379 (* it57 (- 1)) (* it365 (- 1))) 0))
(assert (= (+ (* it366 (- 1)) it380) 0))
(assert (= (+ (* it367 (- 1)) it381) 0))
(assert (let ((a!1 (+ (+ 0 it382)
              (* (+ 0 it369) (exp 2 (+ it57 (- 1))) (+ 0 (- 1))))))
  (= a!1 (+ 0 0))))
(assert (= (+ (* (+ 0 it369) (exp 2 it57) (+ 0 (- 1))) (+ 0 it383))
   (+ 0 0)))
(assert (let ((a!1 (>= (+ (+ (* it88 (- 1)) it381) (- 1)) 0))
      (a!2 (>= (+ (+ (* it88 (- 1)) (* it19 (- 1)) it381) (- 1)) 0))
      (a!3 (>= (+ (+ (* it88 (- 1)) (* it19 (- 1)) it381) (- 2)) 0))
      (a!4 (+ (+ (* it88 (- 1)) (* it380 (- 2))) (* it19 (- 1)) it381))
      (a!5 (+ (+ (+ (* it88 (- 1)) (* it380 (- 2))) it381) 1))
      (a!6 (>= (+ (+ (* it88 (- 1)) (* it380 (- 2))) it381) 0))
      (a!7 (>= (+ (+ (* it88 (- 1)) it381) (- 3)) 0))
      (a!8 (>= (+ (+ (* it88 (- 1)) it381) (- 2)) 0))
      (a!9 (>= (+ (+ (* it383 (- 1)) it381) (- 1)) 0))
      (a!10 (+ (+ (+ (* it88 (- 1)) (* it380 (- 2))) it381) (- 1))))
  (and a!1
       (= (+ (* it380 (- 2)) it383) 0)
       a!2
       (>= (+ (* it378 (- 1)) 3) 0)
       a!3
       (>= (+ a!4 1) 0)
       (>= a!5 0)
       a!6
       a!7
       (>= a!4 0)
       (>= (+ (* it380 (- 1)) 1) 0)
       (>= (+ (* it383 (- 1)) it381) 0)
       (>= (+ it381 (- 2)) 0)
       a!8
       a!9
       (>= (+ it380 (- 1)) 0)
       (>= (+ it381 (- 3)) 0)
       (>= (+ it378 (- 3)) 0)
       (>= a!10 0)
       (= 0 0)
       (>= (+ it19 (- 1)) 0)
       (>= (+ it88 (- 1)) 0)
       (= (+ it88 it19) 0)
       (<= (+ it88 it19) 0))))
(check-sat)
