(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it176 () Int)
(declare-fun it177 () Int)
(declare-fun i2 () Int)
(declare-fun it178 () Int)
(declare-fun i3 () Int)
(declare-fun it179 () Int)
(declare-fun i4 () Int)
(declare-fun it180 () Int)
(declare-fun i5 () Int)
(declare-fun it181 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun it182 () Int)
(declare-fun it351 () Int)
(declare-fun it352 () Int)
(declare-fun it353 () Int)
(declare-fun it354 () Int)
(declare-fun it355 () Int)
(declare-fun it356 () Int)
(declare-fun it357 () Int)
(declare-fun it366 () Int)
(declare-fun it367 () Int)
(declare-fun it368 () Int)
(declare-fun it369 () Int)
(declare-fun it370 () Int)
(declare-fun it371 () Int)
(declare-fun it372 () Int)
(declare-fun it150 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it176 (- 2)) 0))
(assert (= (+ (* i2 (- 1)) it177 (- 1)) 0))
(assert (= (+ (* i3 (- 1)) it178) 0))
(assert (= (+ (* i4 (- 1)) it179) 0))
(assert (= (+ (* i5 (- 1)) it180) 0))
(assert (= (+ (* i6 (- 1)) it181) 0))
(assert (= (+ it182 (* i7 (- 1))) 0))
(assert (and (<= (+ it181 (- 5)) 0)
     (<= (+ (* it181 (- 1)) (- 5)) 0)
     (> it178 0)
     (= (+ it176 (- 2)) 0)))
(assert (= (+ it351 (- 3)) 0))
(assert (= (+ it352 (* it177 (- 1)) (- 2)) 0))
(assert (= (+ it353 (* it178 (- 1))) 0))
(assert (= (+ (* it178 (- 1)) it354) 0))
(assert (= (+ (* it182 (- 1)) it355) 0))
(assert (= (+ it356 (* it181 (- 1))) 0))
(assert (= (+ (* it182 (- 1)) it357) 0))
(assert (let ((a!1 (< (+ (+ 0 (* it355 (- 3)))
                 (* (exp it356 3) (+ 0 2))
                 (* (exp it354 2) (+ 0 4))
                 (exp it356 5))
              (+ 0 0)))
      (a!2 (< (+ (+ 0 (* it355 (- 1))) (exp it354 2) (exp it356 5)) (+ 0 0))))
  (and a!1 a!2 (= (+ it351 (- 3)) 0) (> it354 0) (< (* it354 (- 2)) 0))))
(assert (= (+ it366 (- 3)) 0))
(assert (= (+ (* it352 (- 1)) it367 (- 4)) 0))
(assert (= (+ it368 (* it353 (- 1))) 0))
(assert (= (+ it369 (* it354 (- 4))) 0))
(assert (= (+ (+ 0 (* it355 (- 9))) (* (exp it356 3) (+ 0 8)) (+ 0 it370))
   (+ 0 0)))
(assert (= (+ it371 (* it356 (- 1))) 0))
(assert (= (+ it372 (* it357 (- 1))) 0))
(assert (let ((a!1 (* (* (exp it371 3) (exp 9 (+ it150 (- 1)))) (+ 0 (- 1))))
      (a!2 (* (exp (exp 4 (+ it150 (- 1))) (+ 0 2)) (exp it369 2)))
      (a!4 (* (* (exp it371 3) (exp 9 (+ it150 (- 1)))) (+ 0 (- 3))))
      (a!5 (* (* (exp 9 (+ it150 (- 1))) (+ 0 it370)) (+ 0 3)))
      (a!7 (> (+ (* (exp it371 5) (+ 0 (- 1)))
                 (* (exp it369 2) (+ 0 (- 1)))
                 (+ 0 it370))
              (+ 0 0)))
      (a!8 (> (+ (* (exp it371 5) (+ 0 (- 1)))
                 (* (exp it371 3) (+ 0 (- 2)))
                 (* (exp it369 2) (+ 0 (- 4)))
                 (+ 0 (* it370 3)))
              (+ 0 0))))
(let ((a!3 (+ (* (exp it371 5) (+ 0 (- 1)))
              a!1
              (exp it371 3)
              (* a!2 (+ 0 (- 1)))
              (* (exp 9 (+ it150 (- 1))) (+ 0 it370))))
      (a!6 (> (+ (* (exp it371 5) (+ 0 (- 1)))
                 a!4
                 (exp it371 3)
                 (* a!2 (+ 0 (- 4)))
                 a!5)
              (+ 0 0))))
  (and (>= (+ it366 (- 3)) 0)
       (> (* it369 (- 2)) 0)
       (>= (+ it150 (- 1)) 0)
       (> a!3 (+ 0 0))
       (>= (+ (* it366 (- 1)) 3) 0)
       (> (* it369 (- 1)) 0)
       a!6
       a!7
       a!8))))
(check-sat)
