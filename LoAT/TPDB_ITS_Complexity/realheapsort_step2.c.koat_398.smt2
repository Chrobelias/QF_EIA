(set-info :status unsat) ; swine result
(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it1687 () Int)
(declare-fun it1688 () Int)
(declare-fun i2 () Int)
(declare-fun it1689 () Int)
(declare-fun i3 () Int)
(declare-fun it1690 () Int)
(declare-fun i4 () Int)
(declare-fun it1691 () Int)
(declare-fun i5 () Int)
(declare-fun it1692 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun it1693 () Int)
(declare-fun it1694 () Int)
(declare-fun it1695 () Int)
(declare-fun it1696 () Int)
(declare-fun it1697 () Int)
(declare-fun it1698 () Int)
(declare-fun it1699 () Int)
(declare-fun it1700 () Int)
(declare-fun it1701 () Int)
(declare-fun it1702 () Int)
(declare-fun it1703 () Int)
(declare-fun it1704 () Int)
(declare-fun it1705 () Int)
(declare-fun it1706 () Int)
(declare-fun it1707 () Int)
(declare-fun it1708 () Int)
(declare-fun it1709 () Int)
(declare-fun it1710 () Int)
(declare-fun it1711 () Int)
(declare-fun it1712 () Int)
(declare-fun it1713 () Int)
(declare-fun it1714 () Int)
(declare-fun it316 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it1687 (- 5)) 0))
(assert (= (+ (* i2 (- 1)) it1688 (- 4)) 0))
(assert (= (+ (* i3 (- 1)) it1689) 0))
(assert (= (+ (* i4 (- 1)) it1690) 0))
(assert (= (+ (* i5 (- 1)) it1691) 0))
(assert (= (+ (* i6 (- 1)) it1692) 0))
(assert (= (+ it1693 (* i7 (- 1))) 0))
(assert (and (= (+ it1687 (- 5)) 0) (> (+ it1690 (- 2)) 0)))
(assert (= (+ it1694 (- 18)) 0))
(assert (= (+ it1695 (* it1688 (- 1)) (- 12)) 0))
(assert (= (+ it1696 (* it1689 (- 1))) 0))
(assert (= (+ (* it1690 (- 1)) it1697) 0))
(assert (= (+ it1698 (* it1691 (- 1))) 0))
(assert (= it1699 0))
(assert (= (+ (* it1693 (- 1)) it1700) 0))
(assert (let ((a!1 (>= (+ (+ (* it1699 (- 1)) it1697) (- 2)) 0))
      (a!2 (>= (+ (+ (* it1699 (- 1)) it1697) (- 4)) 0))
      (a!3 (>= (+ (+ (* it1699 (- 1)) it1697) (- 3)) 0))
      (a!4 (> (+ (+ (* it1699 (- 1)) it1697) (- 3)) 0)))
  (and (> 1 0)
       (> (+ it1699 it1697 3) 0)
       (>= (+ (* it1694 (- 1)) 18) 0)
       a!1
       a!2
       a!3
       a!4
       (>= (+ it1694 (- 18)) 0))))
(assert (= (+ it1701 (* it1694 (- 1))) 0))
(assert (= (+ (* it1695 (- 1)) it1702 (* it1699 11) (* it1697 (- 11)) 33) 0))
(assert (= (+ it1703 (* it1697 (- 1)) 3) 0))
(assert (= (+ it1704 (* it1697 (- 1))) 0))
(assert (= (+ it1705 (* it1697 (- 1))) 0))
(assert (= (+ it1706 (* it1697 (- 1)) 3) 0))
(assert (= (+ it1707 (- 1)) 0))
(assert (and (= (+ it1701 (- 18)) 0) (<= (+ (* it1704 (- 1)) it1706 2) 0)))
(assert (= (+ it1708 (- 20)) 0))
(assert (= (+ (* it1702 (- 1)) it1709 (- 2)) 0))
(assert (= (+ (* it1703 (- 1)) it1710) 0))
(assert (= (+ (* it1704 (- 1)) it1711) 0))
(assert (= it1712 0))
(assert (= (+ (* it1706 (- 1)) it1713) 0))
(assert (= (+ it1714 (* it1707 (- 1))) 0))
(assert (let ((a!1 (+ (+ 0 it1711)
              (* (exp 2 (+ it316 (- 1))) (+ 0 it1712) (+ 0 (- 2)))
              (* (exp 2 it316) (+ 0 (- 2)))
              (+ 0 (* it1713 (- 1)))
              (+ 0 1))))
  (and (>= a!1 (+ 0 0))
       (>= (+ (* it1708 (- 1)) 20) 0)
       (> (+ it1711 (* it1712 (- 2)) (* it1713 (- 1)) (- 3)) 0)
       (> a!1 (+ 0 0))
       (>= (+ it1711 (* it1712 (- 2)) (* it1713 (- 1)) (- 3)) 0)
       (>= (+ it316 (- 1)) 0)
       (>= (+ it1708 (- 20)) 0))))
(check-sat)
