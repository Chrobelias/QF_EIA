(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it1 () Int)
(declare-fun i2 () Int)
(declare-fun it2 () Int)
(declare-fun i3 () Int)
(declare-fun it3 () Int)
(declare-fun it4 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun it5 () Int)
(declare-fun i6 () Int)
(declare-fun it6 () Int)
(declare-fun it152 () Int)
(declare-fun it127 () Int)
(declare-fun it13 () Int)
(declare-fun it155 () Int)
(declare-fun it156 () Int)
(declare-fun it157 () Int)
(declare-fun it158 () Int)
(declare-fun it159 () Int)
(declare-fun it160 () Int)
(declare-fun it463 () Int)
(declare-fun it464 () Int)
(declare-fun it465 () Int)
(declare-fun it466 () Int)
(declare-fun it467 () Int)
(declare-fun it468 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it1 (- 2)) 0))
(assert (= (+ it2 (* i2 (- 1)) (- 1)) 0))
(assert (= (+ it3 (* i3 (- 1))) 0))
(assert (= (+ (* i4 (- 1)) it4) 0))
(assert (= (+ it5 (* i5 (- 1))) 0))
(assert (= (+ it6 (* i6 (- 1))) 0))
(assert (let ((a!1 (+ (* (+ it152 (- 1)) it13 (- 2))
              it3
              (* it13 (- 2))
              (* it127 (+ it152 (- 1)) (- 2))))
      (a!2 (+ (* it127 (- 2))
              (* (+ it152 (- 1)) it13 (- 2))
              it3
              (* it13 (- 2))
              (* it127 (+ it152 (- 1)) (- 2)))))
  (and (> (+ a!1 1) 0)
       (> (+ a!2 1) 0)
       (> (+ a!2 2) 0)
       (>= (+ (* it1 (- 1)) 2) 0)
       (> (+ a!1 2) 0)
       (>= (+ it13 (- 1)) 0)
       (> (+ it3 (* it13 (- 2)) 1) 0)
       (>= (+ it1 (- 2)) 0)
       (>= (+ it127 (- 1)) 0)
       (>= (+ it152 (- 1)) 0))))
(assert (= (+ it155 (* it1 (- 1))) 0))
(assert (= (+ (* it2 (- 1)) (* it152 it13 (- 2)) it156 (* it127 it152 (- 2))) 0))
(assert (= (+ (* it152 it13 2) (* it3 (- 1)) (* it127 it152 2) it157) 0))
(assert (let ((a!1 (* (exp (- 1) (+ (* it152 it13) (* it127 it152)))
              (+ 0 it4)
              (+ 0 (- 1)))))
  (= (+ (+ 0 it158) a!1) (+ 0 0))))
(assert (let ((a!1 (* (exp (- 1) (+ (* it152 it13) (* it127 it152)))
              (+ 0 it5)
              (+ 0 (- 1)))))
  (= (+ a!1 (+ 0 it159)) (+ 0 0))))
(assert (let ((a!1 (+ (* (exp it127 3) (exp it152 3) (+ 0 (- 8)))
              (+ 0 (* it152 it13 (- 1)))
              (* (exp it127 2) (exp it152 3) (+ 0 it13) (+ 0 (- 24)))
              (* (* (exp it127 2) (exp it152 2)) (+ 0 6))
              (+ 0 (* it152 it3 it13 (- 6)))
              (* (* (+ 0 it127) (exp it152 2))
                 (+ 0 it3)
                 (+ 0 it13)
                 (+ 0 24))
              (+ 0 (* it6 (- 3)))
              (* (+ 0 it152) (exp it3 2) (+ 0 it13) (+ 0 (- 6)))
              (+ 0 (* (* it127 it152) it3 (- 6)))
              (* (* (exp it127 2) (exp it152 2)) (+ 0 it3) (+ 0 12))
              (* (exp it152 3) (exp it13 3) (+ 0 (- 8)))
              (* (* (+ 0 it127) (exp it152 2)) (+ 0 it13) (+ 0 12))
              (+ 0 (* (* it127 it152) (- 1)))
              (* (exp it152 2) (+ 0 it3) (exp it13 2) (+ 0 12))
              (* (exp it152 2) (exp it13 2) (+ 0 6))
              (+ 0 (* it160 3))
              (* (+ 0 it127) (exp it152 3) (exp it13 2) (+ 0 (- 24)))
              (* (+ 0 (* it127 it152)) (exp it3 2) (+ 0 (- 6))))))
  (= a!1 (+ 0 0))))
(assert (and (> it157 0) (= (+ it155 (- 2)) 0) (> (+ it157 (- 1)) 0)))
(assert (= (+ it463 (- 2)) 0))
(assert (= (+ it464 (* it156 (- 1)) (- 2)) 0))
(assert (= (+ it465 (* it157 (- 1)) 2) 0))
(assert (= (+ it466 it158) 0))
(assert (= (+ it467 it159) 0))
(assert (let ((a!1 (+ (* (exp (+ it157 (- 1)) 2) (+ 0 (- 1)))
              (* (exp it157 2) (+ 0 (- 1)))
              (+ 0 it468)
              (+ 0 (* it160 (- 1))))))
  (= a!1 (+ 0 0))))
(assert (and (> (+ it465 (- 1)) 0)
     (> it465 0)
     (>= (+ it463 (- 2)) 0)
     (>= (+ (* it463 (- 1)) 2) 0)
     (= 2 0)))
(check-sat)
