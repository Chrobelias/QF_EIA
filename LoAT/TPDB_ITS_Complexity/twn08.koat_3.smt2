(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it6 () Int)
(declare-fun it7 () Int)
(declare-fun i2 () Int)
(declare-fun it2 () Int)
(declare-fun it8 () Int)
(declare-fun i4 () Int)
(declare-fun it9 () Int)
(declare-fun it10 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun it11 () Int)
(declare-fun i7 () Int)
(declare-fun it12 () Int)
(declare-fun it300 () Int)
(declare-fun it301 () Int)
(declare-fun it302 () Int)
(declare-fun it303 () Int)
(declare-fun it304 () Int)
(declare-fun it305 () Int)
(declare-fun it306 () Int)
(declare-fun it314 () Int)
(declare-fun it315 () Int)
(declare-fun it316 () Int)
(declare-fun it317 () Int)
(declare-fun it318 () Int)
(declare-fun it319 () Int)
(declare-fun it320 () Int)
(declare-fun it322 () Int)
(declare-fun it323 () Int)
(declare-fun it324 () Int)
(declare-fun it325 () Int)
(declare-fun it326 () Int)
(declare-fun it327 () Int)
(declare-fun it328 () Int)
(declare-fun it256 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it6 (- 2)) 0))
(assert (= (+ (* i2 (- 1)) it7 (- 1)) 0))
(assert (= (+ it8 (* it2 (- 1))) 0))
(assert (= (+ it9 (* i4 (- 1))) 0))
(assert (= (+ (* i5 (- 1)) it10) 0))
(assert (= (+ it11 (* i6 (- 1))) 0))
(assert (= (+ it12 (* i7 (- 1))) 0))
(assert (and (= (+ it6 (- 2)) 0) (> it9 0)))
(assert (= (+ it300 (- 3)) 0))
(assert (= (+ it301 (* it7 (- 1)) (- 1)) 0))
(assert (= (+ it302 (* it8 (- 1))) 0))
(assert (= (+ it303 (* it9 (- 1))) 0))
(assert (= (+ it304 (* it10 (- 1))) 0))
(assert (= (+ (* it11 (- 1)) it305) 0))
(assert (= (+ (* it12 (- 1)) it306) 0))
(assert (= (+ it300 (- 3)) 0))
(assert (= (+ it314 (- 4)) 0))
(assert (= (+ it315 (* it301 (- 1)) (- 1)) 0))
(assert (= (+ (* it302 (- 1)) it316) 0))
(assert (= (+ it317 (* it303 (- 1))) 0))
(assert (= (+ it318 (* it304 (- 1))) 0))
(assert (= (+ (* it305 (- 1)) it319) 0))
(assert (= (+ (* it306 (- 1)) it320) 0))
(assert (let ((a!1 (< (+ (+ 0 it318) (* (exp it319 2) (+ 0 (- 1)))) (+ 0 0))))
  (and (= (+ it314 (- 4)) 0) a!1 (> it318 0))))
(assert (= (+ it322 (- 4)) 0))
(assert (= (+ it323 (* it315 (- 1)) (- 1)) 0))
(assert (= (+ it324 (* it316 (- 1))) 0))
(assert (= (+ (* it317 (- 1)) it325) 0))
(assert (= (+ (* (exp it320 2) (+ 0 (- 1))) (+ 0 (* it318 (- 5))) (+ 0 it326))
   (+ 0 0)))
(assert (= (+ it327 (* it319 (- 2))) 0))
(assert (= (+ it328 (* it320 (- 1))) 0))
(assert (let ((a!1 (* (exp (exp 2 (+ it256 (- 1))) (+ 0 2)) (exp it327 2))))
(let ((a!2 (+ a!1
              (* (exp it328 2) (exp 5 (+ it256 (- 1))) (- (/ 1.0 4.0)))
              (* (exp 5 (+ it256 (- 1))) (+ 0 it326) (+ 0 (- 1)))
              (* (exp it328 2) (/ 1.0 4.0)))))
  (and (>= (+ (* it322 (- 1)) 4) 0)
       (> it326 0)
       (> a!2 (+ 0 0))
       (>= (+ it322 (- 4)) 0)
       (>= (+ it256 (- 1)) 0)))))
(check-sat)
