(set-info :status sat) ; swine result
(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it1 () Int)
(declare-fun it2 () Int)
(declare-fun i2 () Int)
(declare-fun it3 () Int)
(declare-fun i3 () Int)
(declare-fun it4 () Int)
(declare-fun i4 () Int)
(declare-fun it9 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it1 (- 2)) 0))
(assert (= (+ (* i2 (- 1)) it2 (- 1)) 0))
(assert (= (+ (* i3 (- 1)) it3) 0))
(assert (= (+ (* i4 (- 1)) it4) 0))
(assert (let ((a!1 (+ (* (exp 2 (+ it9 (- 1))) (+ 0 it3) (+ 0 (- 1)))
              (+ 0 it4)
              (+ 0 it9))))
  (and (>= (+ it3 (- 1)) 0)
       (>= (+ it1 (- 2)) 0)
       (>= a!1 (+ 0 0))
       (>= (+ (* it1 (- 1)) 2) 0)
       (>= (+ it9 (- 1)) 0))))
(check-sat)
