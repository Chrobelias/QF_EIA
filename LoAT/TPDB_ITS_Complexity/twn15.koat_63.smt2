(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it520 () Int)
(declare-fun it521 () Int)
(declare-fun i2 () Int)
(declare-fun it522 () Int)
(declare-fun i3 () Int)
(declare-fun it523 () Int)
(declare-fun i4 () Int)
(declare-fun it524 () Int)
(declare-fun i5 () Int)
(declare-fun it525 () Int)
(declare-fun i6 () Int)
(declare-fun it526 () Int)
(declare-fun i7 () Int)
(declare-fun it783 () Int)
(declare-fun it784 () Int)
(declare-fun it785 () Int)
(declare-fun it786 () Int)
(declare-fun it787 () Int)
(declare-fun it788 () Int)
(declare-fun it789 () Int)
(declare-fun it494 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it520 (- 2)) 0))
(assert (= (+ (* i2 (- 1)) it521 (- 1)) 0))
(assert (= (+ (* i3 (- 1)) it522) 0))
(assert (= (+ (* i4 (- 1)) it523) 0))
(assert (= (+ (* i5 (- 1)) it524) 0))
(assert (= (+ (* i6 (- 1)) it525) 0))
(assert (= (+ (* i7 (- 1)) it526) 0))
(assert (and (<= (+ it525 (- 5)) 0)
     (<= (+ (* it525 (- 1)) (- 5)) 0)
     (> it522 0)
     (= (+ it520 (- 2)) 0)))
(assert (= (+ it783 (- 3)) 0))
(assert (= (+ it784 (* it521 (- 1)) (- 2)) 0))
(assert (= (+ it785 (* it522 (- 1))) 0))
(assert (= (+ (* it522 (- 1)) it786) 0))
(assert (= (+ it787 (* it526 (- 1))) 0))
(assert (= (+ it788 (* it525 (- 1))) 0))
(assert (= (+ it789 (* it526 (- 1))) 0))
(assert (let ((a!1 (* (* (exp 81 (+ it494 (- 1))) (exp it788 3)) (+ 0 (- 9))))
      (a!2 (* (* (+ 0 it787) (exp 81 (+ it494 (- 1)))) (+ 0 9)))
      (a!3 (* (exp (exp 16 (+ it494 (- 1))) (+ 0 2)) (exp it786 2)))
      (a!5 (> (+ (+ 0 it787)
                 (* (exp it786 2) (+ 0 (- 1)))
                 (* (exp it788 5) (+ 0 (- 1))))
              (+ 0 0)))
      (a!6 (> (+ (+ 0 (* it787 3))
                 (* (exp it788 3) (+ 0 (- 2)))
                 (* (exp it786 2) (+ 0 (- 4)))
                 (* (exp it788 5) (+ 0 (- 1))))
              (+ 0 0)))
      (a!7 (* (* (exp 81 (+ it494 (- 1))) (exp it788 3)) (+ 0 (- 27))))
      (a!8 (* (* (+ 0 it787) (exp 81 (+ it494 (- 1)))) (+ 0 27)))
      (a!10 (* (* (exp 81 (+ it494 (- 1))) (exp it788 3)) (+ 0 (- 1))))
      (a!12 (* (* (exp 81 (+ it494 (- 1))) (exp it788 3)) (+ 0 (- 3))))
      (a!13 (* (* (+ 0 it787) (exp 81 (+ it494 (- 1)))) (+ 0 3)))
      (a!15 (> (+ (+ 0 (* it787 9))
                  (* (exp it788 3) (+ 0 (- 8)))
                  (* (exp it786 2) (+ 0 (- 16)))
                  (* (exp it788 5) (+ 0 (- 1))))
               (+ 0 0))))
(let ((a!4 (> (+ a!1
                 (exp it788 3)
                 a!2
                 (* a!3 (+ 0 (- 16)))
                 (* (exp it788 5) (+ 0 (- 1))))
              (+ 0 0)))
      (a!9 (> (+ a!7
                 (exp it788 3)
                 a!8
                 (* a!3 (+ 0 (- 64)))
                 (* (exp it788 5) (+ 0 (- 1))))
              (+ 0 0)))
      (a!11 (+ a!10
               (exp it788 3)
               (* (+ 0 it787) (exp 81 (+ it494 (- 1))))
               (* a!3 (+ 0 (- 1)))
               (* (exp it788 5) (+ 0 (- 1)))))
      (a!14 (> (+ a!12
                  (exp it788 3)
                  a!13
                  (* a!3 (+ 0 (- 4)))
                  (* (exp it788 5) (+ 0 (- 1))))
               (+ 0 0))))
  (and (> it786 0)
       a!4
       (>= (+ it783 (- 3)) 0)
       a!5
       a!6
       (>= (+ (* it783 (- 1)) 3) 0)
       (> (* it786 8) 0)
       (> (* it786 2) 0)
       a!9
       (> a!11 (+ 0 0))
       a!14
       (>= (+ it494 (- 1)) 0)
       (> (* it786 4) 0)
       a!15))))
(check-sat)
