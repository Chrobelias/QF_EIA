(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun i3 () Int)
(declare-fun it1 () Int)
(declare-fun it2 () Int)
(declare-fun i2 () Int)
(declare-fun it3 () Int)
(declare-fun it4 () Int)
(declare-fun i4 () Int)
(declare-fun it5 () Int)
(declare-fun i5 () Int)
(declare-fun it33 () Int)
(declare-fun it34 () Int)
(declare-fun it35 () Int)
(declare-fun it36 () Int)
(declare-fun it37 () Int)
(declare-fun it46 () Int)
(declare-fun it47 () Int)
(declare-fun it48 () Int)
(declare-fun it49 () Int)
(declare-fun it50 () Int)
(declare-fun it16 () Int)
(assert (and (> i3 0) (= (+ i1 (- 1)) 0)))
(assert (= (+ it1 (- 2)) 0))
(assert (= (+ (* i2 (- 1)) it2 (- 1)) 0))
(assert (= (+ it3 (* i3 (- 1))) 0))
(assert (= (+ (* i4 (- 1)) it4) 0))
(assert (= (+ (* i5 (- 1)) it5) 0))
(assert (and (>= (+ it1 (- 2)) 0)
     (>= (+ it5 (- 1)) 0)
     (> 1 0)
     (>= (+ (* it1 (- 1)) 2) 0)))
(assert (= (+ (* it1 (- 1)) it33) 0))
(assert (= (+ it34 (* it5 (- 1)) (* it2 (- 1))) 0))
(assert (let ((a!1 (+ (+ 0 (+ (* it35 2) (* it3 (- 2))))
              (* (exp it5 2) (+ 0 (- 1)))
              (+ 0 (* it5 (- 1))))))
  (= a!1 (+ 0 0))))
(assert (= (+ it36 (* it4 (- 1))) 0))
(assert (= it37 0))
(assert (let ((a!1 (< (+ (+ 0 it35) (* (exp it36 2) (+ 0 (- 1)))) (+ 0 0))))
  (and a!1 (<= it37 0) (= (+ it33 (- 2)) 0))))
(assert (= (+ it46 (- 3)) 0))
(assert (= (+ (* it34 (- 1)) it47 (- 4)) 0))
(assert (let ((a!1 (* (exp (+ it36 (* it37 (- 1))) 4) (+ 0 (- 1)))))
(let ((a!2 (+ (+ 0 (+ (* it35 (- 5)) it48)) a!1)))
  (= a!2 (+ 0 0)))))
(assert (= (+ (* it36 (- 2)) it49) 0))
(assert (= (+ (* it37 (- 1)) it50) 0))
(assert (let ((a!1 (* (exp it49 2) (exp (exp 2 (+ it16 (- 1))) (+ 0 2)) (+ 0 132))))
(let ((a!2 (+ (* (exp it50 4) (+ 0 33))
              (* (+ 0 it48) (exp 5 (+ it16 (- 1))) (+ 0 (- 132)))
              a!1
              (* (exp it49 4) (exp 16 (+ it16 (- 1))) (+ 0 (- 12)))
              (* (exp it49 2) (exp 5 (+ it16 (- 1))) (exp it50 2) (+ 0 (- 792)))
              (* (exp it49 4) (exp 5 (+ it16 (- 1))) (+ 0 12))
              (* (exp 4 (+ it16 (- 1))) (exp it49 2) (exp it50 2) (+ 0 792))
              (* (+ 0 it49) (exp 5 (+ it16 (- 1))) (exp it50 3) (+ 0 176))
              (* (exp 5 (+ it16 (- 1))) (exp it50 4) (+ 0 (- 33)))
              (* (exp it49 3)
                 (exp 5 (+ it16 (- 1)))
                 (+ 0 it50)
                 (+ 0 (- 176)))
              (* (exp 8 (+ it16 (- 1))) (exp it49 3) (+ 0 it50) (+ 0 176))
              (* (+ 0 it49)
                 (exp it50 3)
                 (exp 2 (+ it16 (- 1)))
                 (+ 0 (- 176))))))
  (and (>= (+ (* it46 (- 1)) 3) 0)
       (> a!2 (+ 0 0))
       (>= (+ it46 (- 3)) 0)
       (>= (+ it16 (- 1)) 0)))))
(check-sat)
