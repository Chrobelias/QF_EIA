(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it1 () Int)
(declare-fun i2 () Int)
(declare-fun it2 () Int)
(declare-fun i3 () Int)
(declare-fun it3 () Int)
(declare-fun it4 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun it5 () Int)
(declare-fun i6 () Int)
(declare-fun it6 () Int)
(declare-fun it92 () Int)
(declare-fun it1182 () Int)
(declare-fun it1183 () Int)
(declare-fun it1184 () Int)
(declare-fun it1185 () Int)
(declare-fun it1186 () Int)
(declare-fun it1187 () Int)
(declare-fun it117 () Int)
(declare-fun it1188 () Int)
(declare-fun it13 () Int)
(declare-fun it1202 () Int)
(declare-fun it1203 () Int)
(declare-fun it1204 () Int)
(declare-fun it1205 () Int)
(declare-fun it1206 () Int)
(declare-fun it1207 () Int)
(declare-fun it1304 () Int)
(declare-fun it1305 () Int)
(declare-fun it1306 () Int)
(declare-fun it1307 () Int)
(declare-fun it1308 () Int)
(declare-fun it1309 () Int)
(declare-fun it1209 () Int)
(declare-fun it1210 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it1 (- 2)) 0))
(assert (= (+ it2 (* i2 (- 1)) (- 1)) 0))
(assert (= (+ it3 (* i3 (- 1))) 0))
(assert (= (+ (* i4 (- 1)) it4) 0))
(assert (= (+ it5 (* i5 (- 1))) 0))
(assert (= (+ it6 (* i6 (- 1))) 0))
(assert (let ((a!1 (> (+ (+ it3 (* it92 (- 2))) 1) 0))
      (a!2 (> (+ (+ it3 (* it92 (- 2))) 2) 0)))
  (and a!1
       a!2
       (>= (+ it1 (- 2)) 0)
       (>= (+ it92 (- 1)) 0)
       (>= (+ (* it1 (- 1)) 2) 0))))
(assert (= (+ it1182 (* it1 (- 1))) 0))
(assert (= (+ (* it2 (- 1)) it1183 (* it92 (- 2))) 0))
(assert (= (+ (* it3 (- 1)) it1184 (* it92 2)) 0))
(assert (= (+ (+ 0 it1185) (* (exp (- 1) it92) (+ 0 it4) (+ 0 (- 1))))
   (+ 0 0)))
(assert (= (+ (* (+ 0 it5) (exp (- 1) it92) (+ 0 (- 1))) (+ 0 it1186))
   (+ 0 0)))
(assert (= (+ (+ 0 (* it3 it92 (- 6)))
      (* (+ 0 it3) (exp it92 2) (+ 0 12))
      (* (exp it92 3) (+ 0 (- 8)))
      (* (exp it92 2) (+ 0 6))
      (+ 0 (* it6 (- 3)))
      (+ 0 (* it1187 3))
      (* (exp it3 2) (+ 0 it92) (+ 0 (- 6)))
      (+ 0 (* it92 (- 1))))
   (+ 0 0)))
(assert (let ((a!1 (+ (* (+ it117 (- 1)) it13 (- 2))
              it1184
              (* it13 (- 2))
              (* (+ it117 (- 1)) it1188 (- 2))))
      (a!3 (> (+ (+ it1184 (* it13 (- 2))) 1) 0))
      (a!5 (> (+ (+ it1184 (* it13 (- 2))) (* it1188 (- 2)) 1) 0)))
(let ((a!2 (> (+ (+ a!1 (* it1188 (- 2))) 2) 0))
      (a!4 (> (+ (+ a!1 (* it1188 (- 2))) 1) 0)))
  (and a!2
       a!3
       a!4
       (>= (+ it1188 (- 1)) 0)
       (> (+ a!1 1) 0)
       (>= (+ it1182 (- 2)) 0)
       (>= (+ (* it1182 (- 1)) 2) 0)
       (>= (+ it13 (- 1)) 0)
       a!5
       (> (+ a!1 2) 0)
       (>= (+ it117 (- 1)) 0)))))
(assert (= (+ (* it1182 (- 1)) it1202) 0))
(assert (= (+ (* it117 it13 (- 2)) (* it117 it1188 (- 2)) (* it1183 (- 1)) it1203) 0))
(assert (= (+ it1204 (* it117 it13 2) (* it117 it1188 2) (* it1184 (- 1))) 0))
(assert (let ((a!1 (* (+ 0 it1185)
              (exp (- 1) (+ (* it117 it13) (* it117 it1188)))
              (+ 0 (- 1)))))
  (= (+ a!1 (+ 0 it1205)) (+ 0 0))))
(assert (let ((a!1 (* (+ 0 it1186)
              (exp (- 1) (+ (* it117 it13) (* it117 it1188)))
              (+ 0 (- 1)))))
  (= (+ a!1 (+ 0 it1206)) (+ 0 0))))
(assert (let ((a!1 (+ 0 (+ (* (* it117 it1184) it13 (- 6)) (* it1207 3)))))
(let ((a!2 (+ a!1
              (* (exp it117 3) (exp it13 2) (+ 0 it1188) (+ 0 (- 24)))
              (+ 0 (* it117 it13 (- 1)))
              (+ 0 (* it117 it1188 (- 1)))
              (* (* (exp it117 2) (+ 0 it1184))
                 (+ 0 it13)
                 (+ 0 it1188)
                 (+ 0 24))
              (+ 0 (* (* it117 it1184) it1188 (- 6)))
              (* (exp it117 2) (+ 0 it13) (+ 0 it1188) (+ 0 12))
              (* (* (+ 0 it117) (exp it1184 2))
                 (+ 0 it1188)
                 (+ 0 (- 6)))
              (+ 0 (* it1187 (- 3)))
              (* (* (exp it117 2) (+ 0 it1184)) (exp it13 2) (+ 0 12))
              (* (exp it117 2) (exp it13 2) (+ 0 6))
              (* (exp it117 3) (exp it1188 3) (+ 0 (- 8)))
              (* (exp it117 3) (+ 0 it13) (exp it1188 2) (+ 0 (- 24)))
              (* (exp it117 2) (exp it1188 2) (+ 0 6))
              (* (* (exp it117 2) (+ 0 it1184)) (exp it1188 2) (+ 0 12))
              (* (exp it117 3) (exp it13 3) (+ 0 (- 8)))
              (* (* (+ 0 it117) (exp it1184 2))
                 (+ 0 it13)
                 (+ 0 (- 6))))))
  (= a!2 (+ 0 0)))))
(assert (and (= (+ it1202 (- 2)) 0) (> it1204 0)))
(assert (= (+ it1304 (- 2)) 0))
(assert (= (+ it1305 (* it1203 (- 1)) (- 1)) 0))
(assert (= (+ (* it1204 (- 1)) it1306 1) 0))
(assert (= (+ (* it1205 (- 3)) it1307 (* it1206 (- 2))) 0))
(assert (= (+ it1308 (* it1205 5) (* it1206 3)) 0))
(assert (let ((a!1 (+ (+ 0 (+ (* it1207 (- 1)) it1309))
              (* (exp it1204 2) (+ 0 (- 1))))))
  (= a!1 (+ 0 0))))
(assert (let ((a!1 (+ (+ (+ (* it1210 (- 2)) it1306) (* it1209 (- 2))) 1))
      (a!2 (> (+ (+ (* it1210 (- 2)) it1306) 1) 0))
      (a!3 (> (+ (+ (* it1210 (- 2)) it1306) 2) 0))
      (a!4 (+ (+ (+ (* it1210 (- 2)) it1306) (* it1209 (- 2))) 2)))
  (and (> a!1 0)
       a!2
       a!3
       (>= (+ it1209 (- 1)) 0)
       (>= (+ (* it1304 (- 1)) 2) 0)
       (>= (+ it1304 (- 2)) 0)
       (>= (+ it1210 (- 1)) 0)
       (<= (+ (* it1210 2) (* it1209 2)) 0)
       (> a!4 0))))
(check-sat)
