(set-info :status unsat) ; swine result
(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it1 () Int)
(declare-fun i2 () Int)
(declare-fun it2 () Int)
(declare-fun i3 () Int)
(declare-fun it3 () Int)
(declare-fun it4 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun it5 () Int)
(declare-fun i6 () Int)
(declare-fun it6 () Int)
(declare-fun it92 () Int)
(declare-fun it1182 () Int)
(declare-fun it1183 () Int)
(declare-fun it1184 () Int)
(declare-fun it1185 () Int)
(declare-fun it1186 () Int)
(declare-fun it1187 () Int)
(declare-fun it1389 () Int)
(declare-fun it1390 () Int)
(declare-fun it1391 () Int)
(declare-fun it1392 () Int)
(declare-fun it1393 () Int)
(declare-fun it1394 () Int)
(declare-fun it56 () Int)
(declare-fun it1407 () Int)
(declare-fun it1408 () Int)
(declare-fun it1409 () Int)
(declare-fun it1410 () Int)
(declare-fun it1411 () Int)
(declare-fun it1412 () Int)
(declare-fun it1416 () Int)
(declare-fun it1417 () Int)
(declare-fun it1418 () Int)
(declare-fun it1419 () Int)
(declare-fun it1420 () Int)
(declare-fun it1421 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it1 (- 2)) 0))
(assert (= (+ it2 (* i2 (- 1)) (- 1)) 0))
(assert (= (+ it3 (* i3 (- 1))) 0))
(assert (= (+ (* i4 (- 1)) it4) 0))
(assert (= (+ it5 (* i5 (- 1))) 0))
(assert (= (+ it6 (* i6 (- 1))) 0))
(assert (let ((a!1 (> (+ (+ it3 (* it92 (- 2))) 1) 0))
      (a!2 (> (+ (+ it3 (* it92 (- 2))) 2) 0)))
  (and a!1
       a!2
       (>= (+ it1 (- 2)) 0)
       (>= (+ it92 (- 1)) 0)
       (>= (+ (* it1 (- 1)) 2) 0))))
(assert (= (+ it1182 (* it1 (- 1))) 0))
(assert (= (+ (* it2 (- 1)) it1183 (* it92 (- 2))) 0))
(assert (= (+ (* it3 (- 1)) it1184 (* it92 2)) 0))
(assert (= (+ (+ 0 it1185) (* (exp (- 1) it92) (+ 0 it4) (+ 0 (- 1))))
   (+ 0 0)))
(assert (= (+ (* (+ 0 it5) (exp (- 1) it92) (+ 0 (- 1))) (+ 0 it1186))
   (+ 0 0)))
(assert (= (+ (+ 0 (* it3 it92 (- 6)))
      (* (+ 0 it3) (exp it92 2) (+ 0 12))
      (* (exp it92 3) (+ 0 (- 8)))
      (* (exp it92 2) (+ 0 6))
      (+ 0 (* it6 (- 3)))
      (+ 0 (* it1187 3))
      (* (exp it3 2) (+ 0 it92) (+ 0 (- 6)))
      (+ 0 (* it92 (- 1))))
   (+ 0 0)))
(assert (= (+ it1182 (- 2)) 0))
(assert (= (+ it1389 (- 3)) 0))
(assert (= (+ (* it1183 (- 1)) it1390 (- 1)) 0))
(assert (= (+ it1391 (* it1184 (- 1))) 0))
(assert (= (+ (* it1185 (- 1)) it1392) 0))
(assert (= (+ (* it1186 (- 1)) it1393) 0))
(assert (= (+ it1394 (* it1187 (- 1))) 0))
(assert (and (>= (+ it1389 (- 3)) 0)
     (>= (+ it56 (- 1)) 0)
     (>= (+ (* it1389 (- 1)) 3) 0)
     (> (+ it1392 (* it56 (- 2)) it1393 2) 0)))
(assert (= (+ it1407 (* it1389 (- 1))) 0))
(assert (= (+ it1408 (* it56 (- 1)) (* it1390 (- 1))) 0))
(assert (= (+ (* it1391 (- 1)) it1409) 0))
(assert (= (+ it1410 (* it1392 (- 1)) it56) 0))
(assert (= (+ it1411 it56 (* it1393 (- 1))) 0))
(assert (= (+ (* it1394 (- 1)) it1412) 0))
(assert (and (> (+ it1410 it1411) 0) (= (+ it1407 (- 3)) 0)))
(assert (= (+ it1416 (- 3)) 0))
(assert (= (+ (* it1408 (- 1)) it1417 (- 1)) 0))
(assert (= (+ it1418 (* it1409 (- 1))) 0))
(assert (= (+ (* it1410 (- 1)) it1419 1) 0))
(assert (= (+ (* it1411 (- 1)) it1420 1) 0))
(assert (= (+ it1421 (* it1412 (- 1))) 0))
(assert (and (> (+ it1419 it1420) 0)
     (= 1 0)
     (>= (+ it1416 (- 3)) 0)
     (>= (+ (* it1416 (- 1)) 3) 0)))
(check-sat)
