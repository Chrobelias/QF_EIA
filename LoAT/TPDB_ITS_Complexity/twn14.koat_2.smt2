(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it1 () Int)
(declare-fun it2 () Int)
(declare-fun i2 () Int)
(declare-fun it3 () Int)
(declare-fun i3 () Int)
(declare-fun it4 () Int)
(declare-fun i4 () Int)
(declare-fun it5 () Int)
(declare-fun i5 () Int)
(declare-fun it6 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun it7 () Int)
(declare-fun it80 () Int)
(declare-fun it81 () Int)
(declare-fun it82 () Int)
(declare-fun it83 () Int)
(declare-fun it84 () Int)
(declare-fun it85 () Int)
(declare-fun it86 () Int)
(declare-fun it112 () Int)
(declare-fun it113 () Int)
(declare-fun it114 () Int)
(declare-fun it115 () Int)
(declare-fun it116 () Int)
(declare-fun it117 () Int)
(declare-fun it118 () Int)
(declare-fun it140 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it1 (- 2)) 0))
(assert (= (+ (* i2 (- 1)) it2 (- 1)) 0))
(assert (= (+ (* i3 (- 1)) it3) 0))
(assert (= (+ (* i4 (- 1)) it4) 0))
(assert (= (+ (* i5 (- 1)) it5) 0))
(assert (= (+ (* i6 (- 1)) it6) 0))
(assert (= (+ it7 (* i7 (- 1))) 0))
(assert (and (> it3 0)
     (= (+ it1 (- 2)) 0)
     (<= (+ (* it6 (- 1)) (- 5)) 0)
     (<= (+ it6 (- 5)) 0)))
(assert (= (+ it80 (- 3)) 0))
(assert (= (+ it81 (* it2 (- 1)) (- 2)) 0))
(assert (= (+ it82 (* it3 (- 1))) 0))
(assert (= (+ it83 (* it3 (- 1))) 0))
(assert (= (+ (* it7 (- 1)) it84) 0))
(assert (= (+ it85 (* it6 (- 1))) 0))
(assert (= (+ it86 (* it7 (- 1))) 0))
(assert (let ((a!1 (< (+ (exp it85 5) (+ 0 (* it84 (- 1))) (exp it83 2)) (+ 0 0))))
  (and (= (+ it80 (- 3)) 0) (> it83 0) a!1)))
(assert (= (+ it112 (- 3)) 0))
(assert (= (+ it113 (* it81 (- 1)) (- 1)) 0))
(assert (= (+ it114 (* it82 (- 1))) 0))
(assert (= (+ (* it83 2) it115) 0))
(assert (= (+ (+ 0 (* it84 (- 3))) (* (exp it85 3) (+ 0 2)) (+ 0 it116))
   (+ 0 0)))
(assert (= (+ it117 (* it85 (- 1))) 0))
(assert (= (+ (* it86 (- 1)) it118) 0))
(assert (let ((a!1 (* (* (exp 9 (+ it140 (- 1))) (exp it117 3)) (+ 0 (- 1))))
      (a!2 (* (exp it115 2) (exp (exp 4 (+ it140 (- 1))) (+ 0 2))))
      (a!4 (> (+ (* (exp it115 2) (+ 0 (- 1)))
                 (* (exp it117 5) (+ 0 (- 1)))
                 (+ 0 it116))
              (+ 0 0)))
      (a!5 (* (* (exp 9 (+ it140 (- 1))) (exp it117 3)) (+ 0 (- 3))))
      (a!6 (* (* (exp 9 (+ it140 (- 1))) (+ 0 it116)) (+ 0 3))))
(let ((a!3 (+ (exp it117 3)
              a!1
              (* a!2 (+ 0 (- 1)))
              (* (exp it117 5) (+ 0 (- 1)))
              (* (exp 9 (+ it140 (- 1))) (+ 0 it116))))
      (a!7 (> (+ (exp it117 3)
                 a!5
                 (* a!2 (+ 0 (- 4)))
                 (* (exp it117 5) (+ 0 (- 1)))
                 a!6)
              (+ 0 0))))
  (and (> (* it115 (- 2)) 0)
       (> (* it115 (- 1)) 0)
       (> a!3 (+ 0 0))
       (>= (+ (* it112 (- 1)) 3) 0)
       (>= (+ it112 (- 3)) 0)
       a!4
       a!7
       (>= (+ it140 (- 1)) 0)))))
(check-sat)
