(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it178 () Int)
(declare-fun it179 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun it180 () Int)
(declare-fun i4 () Int)
(declare-fun it181 () Int)
(declare-fun i5 () Int)
(declare-fun it182 () Int)
(declare-fun i6 () Int)
(declare-fun it183 () Int)
(declare-fun i7 () Int)
(declare-fun it184 () Int)
(declare-fun it352 () Int)
(declare-fun it353 () Int)
(declare-fun it354 () Int)
(declare-fun it355 () Int)
(declare-fun it356 () Int)
(declare-fun it357 () Int)
(declare-fun it358 () Int)
(declare-fun it368 () Int)
(declare-fun it369 () Int)
(declare-fun it370 () Int)
(declare-fun it371 () Int)
(declare-fun it372 () Int)
(declare-fun it373 () Int)
(declare-fun it374 () Int)
(declare-fun it107 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it178 (- 2)) 0))
(assert (= (+ (* i2 (- 1)) it179 (- 1)) 0))
(assert (= (+ it180 (* i3 (- 1))) 0))
(assert (= (+ it181 (* i4 (- 1))) 0))
(assert (= (+ it182 (* i5 (- 1))) 0))
(assert (= (+ it183 (* i6 (- 1))) 0))
(assert (= (+ it184 (* i7 (- 1))) 0))
(assert (and (<= (+ it183 (- 5)) 0)
     (= (+ it178 (- 2)) 0)
     (> it180 0)
     (<= (+ (* it183 (- 1)) (- 5)) 0)))
(assert (= (+ it352 (- 3)) 0))
(assert (= (+ it353 (* it179 (- 1)) (- 2)) 0))
(assert (= (+ (* it180 (- 1)) it354) 0))
(assert (= (+ it355 (* it180 (- 1))) 0))
(assert (= (+ it356 (* it184 (- 1))) 0))
(assert (= (+ (* it183 (- 1)) it357) 0))
(assert (= (+ it358 (* it184 (- 1))) 0))
(assert (let ((a!1 (< (+ (+ 0 (* it356 (- 1))) (exp it355 2) (exp it357 5)) (+ 0 0)))
      (a!2 (< (+ (* (exp it357 3) (+ 0 2))
                 (+ 0 (* it356 (- 3)))
                 (* (exp it355 2) (+ 0 4))
                 (exp it357 5))
              (+ 0 0))))
  (and a!1 (= (+ it352 (- 3)) 0) (> it355 0) (< (* it355 (- 2)) 0) a!2)))
(assert (= (+ it368 (- 3)) 0))
(assert (= (+ (* it353 (- 1)) it369 (- 2)) 0))
(assert (= (+ (* it354 (- 1)) it370) 0))
(assert (= (+ (* it355 (- 4)) it371) 0))
(assert (= (+ (* (exp it357 3) (+ 0 8)) (+ 0 (* it356 (- 9))) (+ 0 it372))
   (+ 0 0)))
(assert (= (+ (* it357 (- 1)) it373) 0))
(assert (= (+ (* it358 (- 1)) it374) 0))
(assert (let ((a!1 (* (* (exp 9 (+ it107 (- 1))) (exp it373 3)) (+ 0 (- 1))))
      (a!2 (* (exp it371 2) (exp (exp 4 (+ it107 (- 1))) (+ 0 2))))
      (a!4 (> (+ (+ 0 it372)
                 (* (exp it371 2) (+ 0 (- 1)))
                 (* (exp it373 5) (+ 0 (- 1))))
              (+ 0 0)))
      (a!5 (> (+ (* (exp it373 3) (+ 0 (- 2)))
                 (+ 0 (* it372 3))
                 (* (exp it371 2) (+ 0 (- 4)))
                 (* (exp it373 5) (+ 0 (- 1))))
              (+ 0 0)))
      (a!6 (* (* (+ 0 it372) (exp 9 (+ it107 (- 1)))) (+ 0 3)))
      (a!7 (* (* (exp 9 (+ it107 (- 1))) (exp it373 3)) (+ 0 (- 3)))))
(let ((a!3 (+ (* (+ 0 it372) (exp 9 (+ it107 (- 1))))
              a!1
              (exp it373 3)
              (* a!2 (+ 0 (- 1)))
              (* (exp it373 5) (+ 0 (- 1)))))
      (a!8 (> (+ a!6
                 a!7
                 (exp it373 3)
                 (* a!2 (+ 0 (- 4)))
                 (* (exp it373 5) (+ 0 (- 1))))
              (+ 0 0))))
  (and (> a!3 (+ 0 0))
       (> (* it371 (- 2)) 0)
       (>= (+ (* it368 (- 1)) 3) 0)
       a!4
       (> (* it371 (- 1)) 0)
       a!5
       a!8
       (>= (+ it107 (- 1)) 0)
       (>= (+ it368 (- 3)) 0)))))
(check-sat)
