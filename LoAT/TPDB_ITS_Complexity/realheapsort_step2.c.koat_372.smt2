(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it1238 () Int)
(declare-fun it1239 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun it1240 () Int)
(declare-fun i4 () Int)
(declare-fun it1241 () Int)
(declare-fun it1242 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun it1243 () Int)
(declare-fun i7 () Int)
(declare-fun it1244 () Int)
(declare-fun it1245 () Int)
(declare-fun it1246 () Int)
(declare-fun it1247 () Int)
(declare-fun it1248 () Int)
(declare-fun it1249 () Int)
(declare-fun it1250 () Int)
(declare-fun it1251 () Int)
(declare-fun it1398 () Int)
(declare-fun it1399 () Int)
(declare-fun it1400 () Int)
(declare-fun it1401 () Int)
(declare-fun it1402 () Int)
(declare-fun it1403 () Int)
(declare-fun it1404 () Int)
(declare-fun it1405 () Int)
(declare-fun it1406 () Int)
(declare-fun it1407 () Int)
(declare-fun it1408 () Int)
(declare-fun it1409 () Int)
(declare-fun it1410 () Int)
(declare-fun it1411 () Int)
(declare-fun it1089 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it1238 (- 5)) 0))
(assert (= (+ (* i2 (- 1)) it1239 (- 4)) 0))
(assert (= (+ it1240 (* i3 (- 1))) 0))
(assert (= (+ it1241 (* i4 (- 1))) 0))
(assert (= (+ (* i5 (- 1)) it1242) 0))
(assert (= (+ it1243 (* i6 (- 1))) 0))
(assert (= (+ it1244 (* i7 (- 1))) 0))
(assert (and (= (+ it1238 (- 5)) 0) (> (+ it1241 (- 2)) 0)))
(assert (= (+ it1245 (- 18)) 0))
(assert (= (+ (* it1239 (- 1)) it1246 (- 12)) 0))
(assert (= (+ (* it1240 (- 1)) it1247) 0))
(assert (= (+ (* it1241 (- 1)) it1248) 0))
(assert (= (+ it1249 (* it1242 (- 1))) 0))
(assert (= it1250 0))
(assert (= (+ (* it1244 (- 1)) it1251) 0))
(assert (let ((a!1 (>= (+ (+ (* it1250 (- 1)) it1248) (- 4)) 0))
      (a!2 (>= (+ (+ (* it1250 (- 1)) it1248) (- 3)) 0))
      (a!3 (>= (+ (+ (* it1250 (- 1)) it1248) (- 2)) 0))
      (a!4 (> (+ (+ (* it1250 (- 1)) it1248) (- 3)) 0)))
  (and (> 1 0)
       a!1
       (>= (+ it1245 (- 18)) 0)
       (>= (+ (* it1245 (- 1)) 18) 0)
       (> (+ it1250 it1248 3) 0)
       a!2
       a!3
       a!4)))
(assert (= (+ (* it1245 (- 1)) it1398) 0))
(assert (= (+ it1399 (* it1250 11) (* it1248 (- 11)) (* it1246 (- 1)) 33) 0))
(assert (= (+ it1400 (* it1248 (- 1)) 3) 0))
(assert (= (+ (* it1248 (- 1)) it1401) 0))
(assert (= (+ it1402 (* it1248 (- 1))) 0))
(assert (= (+ it1403 (* it1248 (- 1)) 3) 0))
(assert (= (+ it1404 (- 1)) 0))
(assert (and (= (+ it1398 (- 18)) 0) (<= (+ it1403 (* it1401 (- 1)) 2) 0)))
(assert (= (+ it1405 (- 20)) 0))
(assert (= (+ (* it1399 (- 1)) it1406 (- 2)) 0))
(assert (= (+ (* it1400 (- 1)) it1407) 0))
(assert (= (+ (* it1401 (- 1)) it1408) 0))
(assert (= it1409 0))
(assert (= (+ (* it1403 (- 1)) it1410) 0))
(assert (= (+ (* it1404 (- 1)) it1411) 0))
(assert (let ((a!1 (+ (* (+ 0 it1409) (exp 2 (+ it1089 (- 1))) (+ 0 (- 2)))
              (+ 0 (* it1410 (- 1)))
              (* (exp 2 (+ it1089 (- 1))) (+ 0 (- 2)))
              (+ 0 it1408)
              (+ 0 (- 1)))))
  (and (>= (+ it1405 (- 20)) 0)
       (>= (+ (* it1405 (- 1)) 20) 0)
       (> a!1 (+ 0 0))
       (> (+ (* it1409 (- 2)) (* it1410 (- 1)) it1408 (- 3)) 0)
       (>= (+ (* it1409 (- 2)) (* it1410 (- 1)) it1408 (- 3)) 0)
       (>= a!1 (+ 0 0))
       (>= (+ it1089 (- 1)) 0))))
(check-sat)
