(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it523 () Int)
(declare-fun it524 () Int)
(declare-fun i2 () Int)
(declare-fun it525 () Int)
(declare-fun i3 () Int)
(declare-fun it526 () Int)
(declare-fun i4 () Int)
(declare-fun it527 () Int)
(declare-fun i5 () Int)
(declare-fun it528 () Int)
(declare-fun i6 () Int)
(declare-fun it529 () Int)
(declare-fun i7 () Int)
(declare-fun it801 () Int)
(declare-fun it802 () Int)
(declare-fun it803 () Int)
(declare-fun it804 () Int)
(declare-fun it805 () Int)
(declare-fun it806 () Int)
(declare-fun it807 () Int)
(declare-fun it821 () Int)
(declare-fun it822 () Int)
(declare-fun it823 () Int)
(declare-fun it824 () Int)
(declare-fun it825 () Int)
(declare-fun it826 () Int)
(declare-fun it827 () Int)
(declare-fun it82 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it523 (- 2)) 0))
(assert (= (+ (* i2 (- 1)) it524 (- 1)) 0))
(assert (= (+ (* i3 (- 1)) it525) 0))
(assert (= (+ (* i4 (- 1)) it526) 0))
(assert (= (+ (* i5 (- 1)) it527) 0))
(assert (= (+ (* i6 (- 1)) it528) 0))
(assert (= (+ (* i7 (- 1)) it529) 0))
(assert (and (<= (+ (* it528 (- 1)) (- 5)) 0)
     (> it525 0)
     (= (+ it523 (- 2)) 0)
     (<= (+ it528 (- 5)) 0)))
(assert (= (+ it801 (- 3)) 0))
(assert (= (+ (* it524 (- 1)) it802 (- 2)) 0))
(assert (= (+ it803 (* it525 (- 1))) 0))
(assert (= (+ it804 (* it525 (- 1))) 0))
(assert (= (+ it805 (* it529 (- 1))) 0))
(assert (= (+ (* it528 (- 1)) it806) 0))
(assert (= (+ it807 (* it529 (- 1))) 0))
(assert (let ((a!1 (< (+ (exp it804 2) (+ 0 (* it805 (- 1))) (exp it806 5)) (+ 0 0)))
      (a!2 (< (+ (* (exp it806 3) (+ 0 2))
                 (* (exp it804 2) (+ 0 4))
                 (+ 0 (* it805 (- 3)))
                 (exp it806 5))
              (+ 0 0))))
  (and (< (* it804 (- 2)) 0) (= (+ it801 (- 3)) 0) a!1 a!2 (> it804 0))))
(assert (= (+ it821 (- 3)) 0))
(assert (= (+ it822 (* it802 (- 1)) (- 2)) 0))
(assert (= (+ (* it803 (- 1)) it823) 0))
(assert (= (+ (* it804 (- 4)) it824) 0))
(assert (= (+ (* (exp it806 3) (+ 0 8)) (+ 0 (* it805 (- 9))) (+ 0 it825))
   (+ 0 0)))
(assert (= (+ it826 (* it806 (- 1))) 0))
(assert (= (+ (* it807 (- 1)) it827) 0))
(assert (let ((a!1 (> (+ (* (exp it824 2) (+ 0 (- 1)))
                 (* (exp it826 5) (+ 0 (- 1)))
                 (+ 0 it825))
              (+ 0 0)))
      (a!2 (> (+ (* (exp it826 3) (+ 0 (- 2)))
                 (* (exp it824 2) (+ 0 (- 4)))
                 (* (exp it826 5) (+ 0 (- 1)))
                 (+ 0 (* it825 3)))
              (+ 0 0)))
      (a!3 (* (* (exp it826 3) (exp 9 (+ it82 (- 1)))) (+ 0 (- 3))))
      (a!4 (* (exp (exp 4 (+ it82 (- 1))) (+ 0 2)) (exp it824 2)))
      (a!5 (* (* (exp 9 (+ it82 (- 1))) (+ 0 it825)) (+ 0 3)))
      (a!7 (* (* (exp it826 3) (exp 9 (+ it82 (- 1)))) (+ 0 (- 1)))))
(let ((a!6 (> (+ a!3
                 (* a!4 (+ 0 (- 4)))
                 a!5
                 (exp it826 3)
                 (* (exp it826 5) (+ 0 (- 1))))
              (+ 0 0)))
      (a!8 (+ a!7
              (* a!4 (+ 0 (- 1)))
              (* (exp 9 (+ it82 (- 1))) (+ 0 it825))
              (exp it826 3)
              (* (exp it826 5) (+ 0 (- 1))))))
  (and (> (* it824 2) 0)
       (>= (+ it821 (- 3)) 0)
       a!1
       a!2
       (> it824 0)
       (>= (+ (* it821 (- 1)) 3) 0)
       a!6
       (> a!8 (+ 0 0))
       (>= (+ it82 (- 1)) 0)))))
(check-sat)
