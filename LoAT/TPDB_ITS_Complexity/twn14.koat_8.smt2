(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it1 () Int)
(declare-fun it2 () Int)
(declare-fun i2 () Int)
(declare-fun it3 () Int)
(declare-fun i3 () Int)
(declare-fun it4 () Int)
(declare-fun i4 () Int)
(declare-fun it5 () Int)
(declare-fun i5 () Int)
(declare-fun it6 () Int)
(declare-fun i6 () Int)
(declare-fun it7 () Int)
(declare-fun i7 () Int)
(declare-fun it68 () Int)
(declare-fun it69 () Int)
(declare-fun it70 () Int)
(declare-fun it71 () Int)
(declare-fun it72 () Int)
(declare-fun it73 () Int)
(declare-fun it74 () Int)
(declare-fun it128 () Int)
(declare-fun it129 () Int)
(declare-fun it130 () Int)
(declare-fun it131 () Int)
(declare-fun it132 () Int)
(declare-fun it133 () Int)
(declare-fun it134 () Int)
(declare-fun it117 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it1 (- 2)) 0))
(assert (= (+ (* i2 (- 1)) it2 (- 1)) 0))
(assert (= (+ (* i3 (- 1)) it3) 0))
(assert (= (+ (* i4 (- 1)) it4) 0))
(assert (= (+ (* i5 (- 1)) it5) 0))
(assert (= (+ (* i6 (- 1)) it6) 0))
(assert (= (+ (* i7 (- 1)) it7) 0))
(assert (and (<= (+ (* it6 (- 1)) (- 5)) 0)
     (> it3 0)
     (= (+ it1 (- 2)) 0)
     (<= (+ it6 (- 5)) 0)))
(assert (= (+ it68 (- 3)) 0))
(assert (= (+ it69 (* it2 (- 1)) (- 2)) 0))
(assert (= (+ it70 (* it3 (- 1))) 0))
(assert (= (+ (* it3 (- 1)) it71) 0))
(assert (= (+ it72 (* it7 (- 1))) 0))
(assert (= (+ it73 (* it6 (- 1))) 0))
(assert (= (+ it74 (* it7 (- 1))) 0))
(assert (let ((a!1 (< (+ (exp it71 2) (exp it73 5) (+ 0 (* it72 (- 1)))) (+ 0 0))))
  (and (= (+ it68 (- 3)) 0) (> it71 0) a!1)))
(assert (= (+ it128 (- 3)) 0))
(assert (= (+ it129 (* it69 (- 1)) (- 1)) 0))
(assert (= (+ it130 (* it70 (- 1))) 0))
(assert (= (+ it131 (* it71 2)) 0))
(assert (let ((a!1 (+ (+ 0 (+ it132 (* it72 (- 3)))) (* (exp it73 3) (+ 0 2)))))
  (= a!1 (+ 0 0))))
(assert (= (+ it133 (* it73 (- 1))) 0))
(assert (= (+ it134 (* it74 (- 1))) 0))
(assert (let ((a!1 (> (+ (+ 0 it132)
                 (* (exp it131 2) (+ 0 (- 1)))
                 (* (exp it133 5) (+ 0 (- 1))))
              (+ 0 0)))
      (a!2 (> (+ (* (exp it133 3) (+ 0 (- 2)))
                 (+ 0 (* it132 3))
                 (* (exp it131 2) (+ 0 (- 4)))
                 (* (exp it133 5) (+ 0 (- 1))))
              (+ 0 0)))
      (a!3 (* (* (exp it133 3) (exp 9 (+ it117 (- 1)))) (+ 0 (- 3))))
      (a!4 (* (exp (exp 4 (+ it117 (- 1))) (+ 0 2)) (exp it131 2)))
      (a!5 (* (* (+ 0 it132) (exp 9 (+ it117 (- 1)))) (+ 0 3)))
      (a!7 (* (* (exp it133 3) (exp 9 (+ it117 (- 1)))) (+ 0 (- 1)))))
(let ((a!6 (> (+ (exp it133 3)
                 a!3
                 (* a!4 (+ 0 (- 4)))
                 a!5
                 (* (exp it133 5) (+ 0 (- 1))))
              (+ 0 0)))
      (a!8 (+ (exp it133 3)
              a!7
              (* a!4 (+ 0 (- 1)))
              (* (+ 0 it132) (exp 9 (+ it117 (- 1))))
              (* (exp it133 5) (+ 0 (- 1))))))
  (and (>= (+ it117 (- 1)) 0)
       a!1
       a!2
       a!6
       (>= (+ (* it128 (- 1)) 3) 0)
       (> it131 0)
       (>= (+ it128 (- 3)) 0)
       (> (* it131 2) 0)
       (> a!8 (+ 0 0))))))
(check-sat)
