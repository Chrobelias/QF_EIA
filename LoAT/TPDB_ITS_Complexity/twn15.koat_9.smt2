(set-info :status sat) ; swine result
(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it1 () Int)
(declare-fun it2 () Int)
(declare-fun i2 () Int)
(declare-fun it3 () Int)
(declare-fun i3 () Int)
(declare-fun it4 () Int)
(declare-fun i4 () Int)
(declare-fun it5 () Int)
(declare-fun i5 () Int)
(declare-fun it6 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun it7 () Int)
(declare-fun it171 () Int)
(declare-fun it172 () Int)
(declare-fun it173 () Int)
(declare-fun it174 () Int)
(declare-fun it175 () Int)
(declare-fun it176 () Int)
(declare-fun it177 () Int)
(declare-fun it187 () Int)
(declare-fun it188 () Int)
(declare-fun it189 () Int)
(declare-fun it190 () Int)
(declare-fun it191 () Int)
(declare-fun it192 () Int)
(declare-fun it193 () Int)
(declare-fun it194 () Int)
(declare-fun it195 () Int)
(declare-fun it196 () Int)
(declare-fun it197 () Int)
(declare-fun it198 () Int)
(declare-fun it199 () Int)
(declare-fun it200 () Int)
(declare-fun it201 () Int)
(declare-fun it202 () Int)
(declare-fun it203 () Int)
(declare-fun it204 () Int)
(declare-fun it205 () Int)
(declare-fun it206 () Int)
(declare-fun it207 () Int)
(declare-fun it128 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it1 (- 2)) 0))
(assert (= (+ (* i2 (- 1)) it2 (- 1)) 0))
(assert (= (+ (* i3 (- 1)) it3) 0))
(assert (= (+ (* i4 (- 1)) it4) 0))
(assert (= (+ (* i5 (- 1)) it5) 0))
(assert (= (+ (* i6 (- 1)) it6) 0))
(assert (= (+ it7 (* i7 (- 1))) 0))
(assert (and (= (+ it1 (- 2)) 0)
     (<= (+ (* it6 (- 1)) (- 5)) 0)
     (> it3 0)
     (<= (+ it6 (- 5)) 0)))
(assert (= (+ it171 (- 3)) 0))
(assert (= (+ it172 (* it2 (- 1)) (- 2)) 0))
(assert (= (+ it173 (* it3 (- 1))) 0))
(assert (= (+ (* it3 (- 1)) it174) 0))
(assert (= (+ it175 (* it7 (- 1))) 0))
(assert (= (+ it176 (* it6 (- 1))) 0))
(assert (= (+ (* it7 (- 1)) it177) 0))
(assert (let ((a!1 (< (+ (+ 0 (* it175 (- 1))) (exp it174 2) (exp it176 5)) (+ 0 0))))
  (and a!1 (= (+ it171 (- 3)) 0) (> it174 0))))
(assert (= (+ it187 (- 3)) 0))
(assert (= (+ (* it172 (- 1)) it188 (- 2)) 0))
(assert (= (+ it189 (* it173 (- 1))) 0))
(assert (= (+ it190 (* it174 2)) 0))
(assert (= (+ (+ 0 (* it175 (- 3))) (* (exp it176 3) (+ 0 2)) (+ 0 it191))
   (+ 0 0)))
(assert (= (+ (* it176 (- 1)) it192) 0))
(assert (= (+ it193 (* it177 (- 1))) 0))
(assert (let ((a!1 (< (+ (exp it190 2) (+ 0 (* it191 (- 1))) (exp it192 5)) (+ 0 0))))
  (and a!1 (< it190 0) (= (+ it187 (- 3)) 0))))
(assert (= (+ it194 (- 3)) 0))
(assert (= (+ (* it188 (- 1)) it195 (- 2)) 0))
(assert (= (+ (* it189 (- 1)) it196) 0))
(assert (= (+ (* it190 2) it197) 0))
(assert (= (+ (* (exp it192 3) (+ 0 2)) (+ 0 (* it191 (- 3))) (+ 0 it198))
   (+ 0 0)))
(assert (= (+ it199 (* it192 (- 1))) 0))
(assert (= (+ (* it193 (- 1)) it200) 0))
(assert (let ((a!1 (< (+ (exp it199 5) (exp it197 2) (+ 0 (* it198 (- 1)))) (+ 0 0))))
  (and a!1 (= (+ it194 (- 3)) 0) (> it197 0))))
(assert (= (+ it201 (- 3)) 0))
(assert (= (+ it202 (* it195 (- 1)) (- 2)) 0))
(assert (= (+ (* it196 (- 1)) it203) 0))
(assert (= (+ (* it197 2) it204) 0))
(assert (= (+ (* (exp it199 3) (+ 0 2)) (+ 0 (* it198 (- 3))) (+ 0 it205))
   (+ 0 0)))
(assert (= (+ (* it199 (- 1)) it206) 0))
(assert (= (+ (* it200 (- 1)) it207) 0))
(assert (let ((a!1 (* (* (exp 9 (+ it128 (- 1))) (exp it206 3)) (+ 0 (- 1))))
      (a!2 (* (exp it204 2) (exp (exp 4 (+ it128 (- 1))) (+ 0 2))))
      (a!4 (* (* (exp 9 (+ it128 (- 1))) (exp it206 3)) (+ 0 (- 3))))
      (a!5 (* (* (exp 9 (+ it128 (- 1))) (+ 0 it205)) (+ 0 3)))
      (a!7 (> (+ (* (exp it206 5) (+ 0 (- 1)))
                 (+ 0 it205)
                 (* (exp it204 2) (+ 0 (- 1))))
              (+ 0 0))))
(let ((a!3 (+ (* (exp it206 5) (+ 0 (- 1)))
              a!1
              (* (exp 9 (+ it128 (- 1))) (+ 0 it205))
              (* a!2 (+ 0 (- 1)))
              (exp it206 3)))
      (a!6 (> (+ (* (exp it206 5) (+ 0 (- 1)))
                 a!4
                 a!5
                 (* a!2 (+ 0 (- 4)))
                 (exp it206 3))
              (+ 0 0))))
  (and (> a!3 (+ 0 0))
       a!6
       (> (* it204 (- 2)) 0)
       (>= (+ it201 (- 3)) 0)
       a!7
       (> (* it204 (- 1)) 0)
       (>= (+ (* it201 (- 1)) 3) 0)
       (>= (+ it128 (- 1)) 0)))))
(check-sat)
