(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun i8 () Int)
(declare-fun it1 () Int)
(declare-fun it2 () Int)
(declare-fun i2 () Int)
(declare-fun it3 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun it4 () Int)
(declare-fun it5 () Int)
(declare-fun i5 () Int)
(declare-fun it6 () Int)
(declare-fun it7 () Int)
(declare-fun it8 () Int)
(declare-fun it331 () Int)
(declare-fun it332 () Int)
(declare-fun it333 () Int)
(declare-fun it334 () Int)
(declare-fun it335 () Int)
(declare-fun it336 () Int)
(declare-fun it337 () Int)
(declare-fun it338 () Int)
(declare-fun it440 () Int)
(declare-fun it441 () Int)
(declare-fun it442 () Int)
(declare-fun it443 () Int)
(declare-fun it444 () Int)
(declare-fun it445 () Int)
(declare-fun it446 () Int)
(declare-fun it447 () Int)
(declare-fun it122 () Int)
(assert (and (> i8 0) (= (+ i1 (- 1)) 0)))
(assert (= (+ it1 (- 2)) 0))
(assert (= (+ (* i2 (- 1)) it2 (- 1)) 0))
(assert (= (+ (* i6 (- 1)) it3) 0))
(assert (= (+ it4 (* i7 (- 1))) 0))
(assert (= (+ (* i5 (- 1)) it5) 0))
(assert (= (+ (* i6 (- 1)) it6) 0))
(assert (= (+ it7 (* i7 (- 1))) 0))
(assert (= (+ (* i8 (- 1)) it8) 0))
(assert (and (= (+ it1 (- 2)) 0) (<= it5 0)))
(assert (= (+ it331 (- 3)) 0))
(assert (= (+ (* it2 (- 1)) it332 (- 1)) 0))
(assert (= (+ it333 (* it3 (- 1))) 0))
(assert (= (+ (* it4 (- 1)) it334) 0))
(assert (= (+ (* it5 (- 1)) it335) 0))
(assert (= (+ it336 (* it5 (- 1))) 0))
(assert (= (+ (* it7 (- 1)) it337) 0))
(assert (= (+ (* it8 (- 1)) it338) 0))
(assert (let ((a!1 (< (+ (+ 0 it333) (* (exp it334 2) (+ 0 (- 1)))) (+ 0 0))))
  (and a!1 (> it333 0) (= (+ it331 (- 3)) 0))))
(assert (= (+ it440 (- 3)) 0))
(assert (= (+ it441 (* it332 (- 1)) (- 1)) 0))
(assert (= (+ (+ 0 (* it333 (- 5))) (* (exp it335 2) (+ 0 (- 1))) (+ 0 it442))
   (+ 0 0)))
(assert (= (+ (* it334 (- 2)) it443) 0))
(assert (= (+ (* it335 (- 1)) it444) 0))
(assert (= (+ (* it336 (- 1)) it445) 0))
(assert (= (+ (* it337 (- 1)) it446) 0))
(assert (= (+ it447 (* it338 (- 1))) 0))
(assert (let ((a!1 (* (exp it443 2) (exp (exp 2 (+ it122 (- 1))) (+ 0 2)))))
(let ((a!2 (+ (* (exp it444 2) (/ 1.0 4.0))
              a!1
              (* (exp 5 (+ it122 (- 1))) (+ 0 it442) (+ 0 (- 1)))
              (* (exp 5 (+ it122 (- 1))) (exp it444 2) (- (/ 1.0 4.0))))))
  (and (> it442 0)
       (> a!2 (+ 0 0))
       (>= (+ it122 (- 1)) 0)
       (>= (+ (* it440 (- 1)) 3) 0)
       (>= (+ it440 (- 3)) 0)))))
(check-sat)
