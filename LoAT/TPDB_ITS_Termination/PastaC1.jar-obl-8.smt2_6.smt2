(set-info :status sat) ; swine result
(set-logic ALL)
(declare-fun it4 () Int)
(declare-fun i1 () Int)
(declare-fun it13 () Int)
(declare-fun it14 () Int)
(declare-fun it15 () Int)
(declare-fun it20 () Int)
(declare-fun it22 () Int)
(declare-fun it23 () Int)
(declare-fun it24 () Int)
(declare-fun it27 () Int)
(declare-fun it28 () Int)
(declare-fun it29 () Int)
(assert (and (= (+ i1 (- 4)) 0) (> (+ it4 1) 0)))
(assert (= (+ it13 (- 3)) 0))
(assert (= (+ (* it4 (- 1)) it14) 0))
(assert (= (+ it15 (- 1)) 0))
(assert (let ((a!1 (+ (* (exp 2 (+ it20 (- 1))) (+ 0 it15) (+ 0 (- 1)))
              (+ 0 it14))))
  (and (> it15 0)
       (>= (+ (* it13 (- 1)) 3) 0)
       (>= (+ it13 (- 3)) 0)
       (> a!1 (+ 0 0))
       (>= (+ it20 (- 1)) 0))))
(assert (= (+ (* it13 (- 1)) it22) 0))
(assert (= (+ (* it14 (- 1)) it23) 0))
(assert (= (+ (* (exp 2 it20) (+ 0 it15) (+ 0 (- 1))) (+ 0 it24)) (+ 0 0)))
(assert (and (= (+ it22 (- 3)) 0) (> it23 0) (>= (+ it24 (* it23 (- 1))) 0)))
(assert (= (+ it27 (- 3)) 0))
(assert (= (+ it28 (* it23 (- 1)) 1) 0))
(assert (= (+ it29 (- 1)) 0))
(check-sat)
