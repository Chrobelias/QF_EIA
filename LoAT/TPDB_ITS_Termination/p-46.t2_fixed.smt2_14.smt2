(set-info :status unsat) ; swine result
(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it89 () Int)
(declare-fun i3 () Int)
(declare-fun it90 () Int)
(declare-fun it91 () Int)
(declare-fun i4 () Int)
(declare-fun it92 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun it93 () Int)
(declare-fun i7 () Int)
(declare-fun it94 () Int)
(declare-fun it95 () Int)
(declare-fun i8 () Int)
(declare-fun it139 () Int)
(declare-fun it19 () Int)
(declare-fun it143 () Int)
(declare-fun it144 () Int)
(declare-fun it145 () Int)
(declare-fun it35 () Int)
(declare-fun it146 () Int)
(declare-fun it147 () Int)
(declare-fun it148 () Int)
(declare-fun it149 () Int)
(declare-fun it154 () Int)
(declare-fun it155 () Int)
(declare-fun it156 () Int)
(declare-fun it36 () Int)
(declare-fun it157 () Int)
(declare-fun it151 () Int)
(declare-fun it158 () Int)
(declare-fun it159 () Int)
(declare-fun it160 () Int)
(declare-fun it152 () Int)
(declare-fun it164 () Int)
(declare-fun it165 () Int)
(declare-fun it166 () Int)
(declare-fun it167 () Int)
(declare-fun it168 () Int)
(declare-fun it169 () Int)
(declare-fun it170 () Int)
(declare-fun it171 () Int)
(declare-fun it172 () Int)
(declare-fun it173 () Int)
(declare-fun it174 () Int)
(declare-fun it175 () Int)
(declare-fun it176 () Int)
(declare-fun it177 () Int)
(declare-fun it163 () Int)
(assert (= (+ i1 (- 10)) 0))
(assert (= (+ it89 (- 2)) 0))
(assert (= (+ it90 (* i3 (- 1))) 0))
(assert (= (+ (* i4 (- 1)) it91) 0))
(assert (= (+ (* i5 (- 1)) it92) 0))
(assert (= (+ it93 (* i6 (- 1))) 0))
(assert (= (+ it94 (* i7 (- 1))) 0))
(assert (= (+ (* i8 (- 1)) it95) 0))
(assert (let ((a!1 (+ (* (exp 3 (+ it139 (- 1))) (+ 0 (- 1)))
              (+ 0 (* it19 4))
              (* (exp 3 (+ it139 (- 1))) (+ 0 it90) (+ 0 (- 2)))
              (+ 0 (- 1)))))
  (and (>= (+ (* it19 2) (* it90 (- 1)) (- 1)) 0)
       (>= a!1 (+ 0 0))
       (>= (+ (* it89 (- 1)) 2) 0)
       (>= (+ it90 (- 1)) 0)
       (>= (+ it89 (- 2)) 0)
       (>= (+ it139 (- 1)) 0))))
(assert (= (+ it143 (* it89 (- 1))) 0))
(assert (= (+ (* (+ 0 it90) (exp 3 it139) (+ 0 (- 2)))
      (* (exp 3 it139) (+ 0 (- 1)))
      (+ 0 (* it144 2))
      (+ 0 1))
   (+ 0 0)))
(assert (let ((a!1 (+ (* (exp 3 (+ it139 (- 1))) (+ 0 (- 1)))
              (* (exp 3 (+ it139 (- 1))) (+ 0 it90) (+ 0 (- 2)))
              (+ 0 (* it145 2))
              (+ 0 1))))
  (= a!1 (+ 0 0))))
(assert (= (+ it146 (* it35 (- 1))) 0))
(assert (= (+ (* it93 (- 1)) it147) 0))
(assert (= (+ (* it94 (- 1)) it148) 0))
(assert (= (+ it149 (* it19 (- 1))) 0))
(assert (and (<= (+ (* it144 (- 1)) 1) 0) (= (+ it143 (- 2)) 0)))
(assert (= (+ it154 (- 5)) 0))
(assert (= (+ it155 (* it144 (- 1))) 0))
(assert (= (+ (* it36 (- 1)) it156) 0))
(assert (= (+ (* it151 (- 1)) it157) 0))
(assert (= (+ it158 (* it147 (- 1))) 0))
(assert (= (+ it159 (* it148 (- 1))) 0))
(assert (= (+ (* it152 (- 1)) it160) 0))
(assert (and (= (+ (* it155 (- 1)) it156) 0)
     (= (+ it154 (- 5)) 0)
     (<= (+ (* it155 (- 1)) (* it160 2) 1) 0)))
(assert (= (+ it164 (- 7)) 0))
(assert (= (+ it165 (* it155 (- 3)) (- 1)) 0))
(assert (= (+ (* it155 (- 1)) it166) 0))
(assert (= (+ it167 (* it157 (- 1))) 0))
(assert (= (+ it168 (* it158 (- 1))) 0))
(assert (= (+ (* it159 (- 1)) it169) 0))
(assert (= (+ (* it160 (- 1)) it170) 0))
(assert (and (<= (+ (* it166 (- 1)) (* it170 2) 1) 0)
     (= (+ it164 (- 7)) 0)
     (<= (+ (* it166 (- 1)) 1) 0)))
(assert (= (+ it171 (- 2)) 0))
(assert (= (+ it172 (* it165 (- 1))) 0))
(assert (= (+ it173 (* it166 (- 1))) 0))
(assert (= (+ it174 (* it167 (- 1))) 0))
(assert (= (+ (* it168 (- 1)) it175) 0))
(assert (= (+ (* it169 (- 1)) it176) 0))
(assert (= (+ it177 (* it170 (- 1))) 0))
(assert (and (>= (+ (* it171 (- 1)) 2) 0)
     (>= (+ (* it172 (- 1)) (* it163 2)) 0)
     (<= (+ it172 (* it163 (- 1))) 0)
     (>= (+ it172 (- 1)) 0)
     (>= (+ it172 (* it163 (- 2))) 0)
     (>= (+ it171 (- 2)) 0)
     (>= (+ (* it163 2) (- 1)) 0)))
(check-sat)
