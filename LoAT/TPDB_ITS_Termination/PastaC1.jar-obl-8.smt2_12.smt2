(set-logic ALL)
(declare-fun it4 () Int)
(declare-fun i1 () Int)
(declare-fun it13 () Int)
(declare-fun it14 () Int)
(declare-fun it15 () Int)
(declare-fun it30 () Int)
(declare-fun it31 () Int)
(declare-fun it32 () Int)
(declare-fun it33 () Int)
(declare-fun it20 () Int)
(assert (and (= (+ i1 (- 4)) 0) (> (+ it4 1) 0)))
(assert (= (+ it13 (- 3)) 0))
(assert (= (+ (* it4 (- 1)) it14) 0))
(assert (= (+ it15 (- 1)) 0))
(assert (and (>= (+ (* it13 (- 1)) 3) 0)
     (> (+ it14 (* it30 (- 1)) 1) 0)
     (>= (+ it13 (- 3)) 0)
     (<= (+ it15 (- 2)) 0)
     (> it14 0)
     (>= (+ it30 (- 1)) 0)
     (>= (+ (* it14 (- 1)) it15) 0)))
(assert (= (+ (* it13 (- 1)) it31) 0))
(assert (= (+ (* it14 (- 1)) it30 it32) 0))
(assert (= (+ it33 (- 1)) 0))
(assert (let ((a!1 (+ (+ 0 it32)
              (* (+ 0 it33) (exp 2 (+ it20 (- 1))) (+ 0 (- 1))))))
  (and (>= (+ it31 (- 3)) 0)
       (>= (+ (* it31 (- 1)) 3) 0)
       (> a!1 (+ 0 0))
       (> it33 0)
       (>= (+ it20 (- 1)) 0))))
(check-sat)
