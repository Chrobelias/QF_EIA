(set-info :status unsat) ; swine result
(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it27 () Int)
(declare-fun it28 () Int)
(declare-fun it29 () Int)
(declare-fun it33 () Int)
(declare-fun it35 () Int)
(declare-fun it36 () Int)
(declare-fun it37 () Int)
(assert (= (+ i1 (- 1)) 0))
(assert (= (+ it27 (- 2)) 0))
(assert (= (+ it28 (- 1)) 0))
(assert (= (+ it29 (- 1)) 0))
(assert (let ((a!1 (+ (* (exp 2 (+ it33 (- 1))) (+ 0 it28) (+ 0 (- 1)))
              (* (exp 2 (+ it33 (- 1))) (+ 0 (- 4)))
              (+ 0 6)))
      (a!2 (+ (* (+ 0 it29) (exp 2 (+ it33 (- 1))) (+ 0 (- 1)))
              (* (exp 2 (+ it33 (- 1))) (+ 0 (- 4)))
              (+ 0 6))))
  (and (>= a!1 (+ 0 0))
       (>= (+ it27 (- 2)) 0)
       (>= (+ it33 (- 1)) 0)
       (>= a!2 (+ 0 0))
       (>= (+ (* it27 (- 1)) 2) 0))))
(assert (= (+ it35 (* it27 (- 1))) 0))
(assert (= (+ (* (exp 2 it33) (+ 0 (- 4)))
      (+ 0 it36)
      (* (exp 2 it33) (+ 0 it28) (+ 0 (- 1)))
      (+ 0 4))
   (+ 0 0)))
(assert (= (+ (+ 0 it37)
      (* (exp 2 it33) (+ 0 (- 4)))
      (* (+ 0 it29) (exp 2 it33) (+ 0 (- 1)))
      (+ 0 4))
   (+ 0 0)))
(assert (and (<= (+ it36 (- 2)) 0) (> (+ it37 (- 2)) 0) (= (+ it35 (- 2)) 0)))
(check-sat)
